"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[3677],{59799:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>l,default:()=>a,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=n(74848),r=n(28453);const i={title:"Multiplexer des entr\xe9es-sorties"},l=void 0,o={id:"enseirb/s7/prog_sys/13",title:"Multiplexer des entr\xe9es-sorties",description:"Dans ce chapitre, nous voulons pr\xe9senter le probl\xe8me des attentes actives sur",source:"@site/docs/enseirb/s7/prog_sys/13.md",sourceDirName:"enseirb/s7/prog_sys",slug:"/enseirb/s7/prog_sys/13",permalink:"/docs/enseirb/s7/prog_sys/13",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Multiplexer des entr\xe9es-sorties"},sidebar:"tutorialSidebar",previous:{title:"Algorithmes Distribu\xe9s & Interblocages",permalink:"/docs/enseirb/s7/prog_sys/12"},next:{title:"Les threads POSIX",permalink:"/docs/enseirb/s7/prog_sys/14"}},u={},d=[{value:"Solution avec le mode non bloquant",id:"solution-avec-le-mode-non-bloquant",level:3},{value:"Utiliser les m\xe9canismes asynchrones",id:"utiliser-les-m\xe9canismes-asynchrones",level:3},{value:"Les outils de s\xe9lection",id:"les-outils-de-s\xe9lection",level:2},{value:"La primitive <code>select</code>",id:"la-primitive-select",level:3},{value:"La primitive <code>poll</code>",id:"la-primitive-poll",level:3}];function c(e){const s={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Dans ce chapitre, nous voulons pr\xe9senter le probl\xe8me des attentes actives sur\nplusieurs descripteur. L'exemple le plus fr\xe9quent est celui d'un serveur web, le\nserveur doit g\xe9rer simultan\xe9ment un tr\xe8s grand nombre de flux d'entr\xe9e et de\nflux de sortie et de flux de contr\xf4le."}),"\n",(0,t.jsx)(s.h3,{id:"solution-avec-le-mode-non-bloquant",children:"Solution avec le mode non bloquant"}),"\n",(0,t.jsx)(s.p,{children:"Il est possible d'utiliser des entr\xe9es sorties non bloquantes mais c'est loin\nd'\xeatre la solution optimale car notre processus va r\xe9aliser de nombreux appels\nsyst\xe8me inutile d'autant plus si dans le cas d'un serveur avec des comportements\nde clients tr\xe8s al\xe9atoires. Le co\xfbt en ressources de cette attente active est\nextr\xeamement cher, et doit \xeatre \xe9vit\xe9 dans le cas d'une machine en temps partag\xe9."}),"\n",(0,t.jsx)(s.h3,{id:"utiliser-les-m\xe9canismes-asynchrones",children:"Utiliser les m\xe9canismes asynchrones"}),"\n",(0,t.jsx)(s.p,{children:"On peut utiliser des entr\xe9es-sorties asynchrones et demander au noyau de nous\npr\xe9venir par un signal qui informe de l'arriv\xe9e de donn\xe9es sur un descripteur.\nCe signal est SIGIO, mais ce n'est valable que sur les descripteurs qui sont des\np\xe9riph\xe9riques. De plus ce m\xe9canisme ne d\xe9signe pas le descripteur sur lequel\ns'est faite l'arriv\xe9e de caract\xe8res, d'o\xf9 de nouvelles pertes de temps d\xfbes aux\nappels r\xe9alis\xe9s inutilement en mode non bloquant."}),"\n",(0,t.jsx)(s.h2,{id:"les-outils-de-s\xe9lection",children:"Les outils de s\xe9lection"}),"\n",(0,t.jsxs)(s.p,{children:["La solution la plus efficace vient de syst\xe8mes de s\xe9lection qui prend un\nparam\xe8tre un ensemble de descripteurs et qui permet de tester si l'un de ses\ndescripteurs est pr\xe8s \xe0 satisfaire un appel syst\xe8me ",(0,t.jsx)(s.code,{children:"read"})," ou ",(0,t.jsx)(s.code,{children:"write"}),". Cet appel\nest bloquant jusqu'\xe0 l'arriv\xe9e de caract\xe8res sur un des descripteurs de\nl'ensemble. Ainsi il n'y a pas de consommation de ressource processus inutile,\nle travail est fait \xe0 un niveau plus bas (dans le noyau) de fa\xe7on plus\n\xe9conomique en ressources."]}),"\n",(0,t.jsxs)(s.h3,{id:"la-primitive-select",children:["La primitive ",(0,t.jsx)(s.code,{children:"select"})]}),"\n",(0,t.jsxs)(s.p,{children:["La premi\xe8re impl\xe9mentation d'un outil de s\xe9lection sous Unix est l'appel syst\xe8me\n",(0,t.jsx)(s.code,{children:"select"}),", malheureusement sa syntaxe est devenu inadapt\xe9 pour des situations o\xf9\nle nombre de descripteur utilis\xe9 par le programme est tr\xe8s grand ce qui peut\narriver facilement avec un serveur de fichier. Nous fournissons \xe0 la primitive\nselect :"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Les descripteurs que nous voulons scruter (l'indice du plus grand descripteur\nqui nous int\xe9resse dans la table des descripteurs du processus)"}),"\n",(0,t.jsx)(s.li,{children:"Les conditions de r\xe9veil sur chaque descripteur (en attente de lecture,\n\xe9criture, \xe9v\xe8nement)"}),"\n",(0,t.jsx)(s.li,{children:"Combien de temps nous voulons attendre."}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["La fonction retourne pour chaque descripteur s'il est pr\xeat en lecture, \xe9criture\nou si l'\xe9v\xe8nement a eu lieu, et aussi le nombre de descripteur pr\xeats. Cette\ninformation nous permet ensuite d'appeler ",(0,t.jsx)(s.code,{children:"read"})," ou ",(0,t.jsx)(s.code,{children:"write"})," sur les bons\ndescripteurs."]}),"\n",(0,t.jsxs)(s.h3,{id:"la-primitive-poll",children:["La primitive ",(0,t.jsx)(s.code,{children:"poll"})]}),"\n",(0,t.jsxs)(s.p,{children:["La primitive ",(0,t.jsx)(s.code,{children:"poll"})," fournit un service proche de ",(0,t.jsx)(s.code,{children:"select"})," avec une autre forme\nd'interface. Cette interface est adapt\xe9e quand le nombre de descripteurs ouvert\npar le processus est tr\xe8s grand mais que l'on ne s'int\xe9resse qu'\xe0 un petit\nnombre de ceux ci."]})]})}function a(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var t=n(96540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);
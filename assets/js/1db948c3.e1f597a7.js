"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[8989],{1038:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var s=o(74848),r=o(28453);const t={title:"Architecture compl\xe8te",description:"Exemple complet d'architecture CI/CD r\xe9utilisable",tags:["CI/CD","GitHub","Devops"]},i=void 0,l={permalink:"/blog/2024/03/03/ci-cd-exemple",source:"@site/blog/2024-03-03-ci-cd-exemple.md",title:"Architecture compl\xe8te",description:"Exemple complet d'architecture CI/CD r\xe9utilisable",date:"2024-03-03T00:00:00.000Z",tags:[{inline:!0,label:"CI/CD",permalink:"/blog/tags/ci-cd"},{inline:!0,label:"GitHub",permalink:"/blog/tags/git-hub"},{inline:!0,label:"Devops",permalink:"/blog/tags/devops"}],readingTime:2.71,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Architecture compl\xe8te",description:"Exemple complet d'architecture CI/CD r\xe9utilisable",tags:["CI/CD","GitHub","Devops"]},unlisted:!1,prevItem:{title:"orchestration-dokku",permalink:"/blog/2024/03/10/orchestration-dokku"},nextItem:{title:"Action Runner Controller GitHub",permalink:"/blog/2024/02/25/ci-cd-github-arc"}},c={authorsImageUrls:[]},a=[{value:"Cr\xe9ation d&#39;une architecture CI/CD",id:"cr\xe9ation-dune-architecture-cicd",level:2},{value:"Exemple de workflow <code>ros1.yml</code>",id:"exemple-de-workflow-ros1yml",level:3},{value:"Exemple de workflow <code>ci.yml</code>",id:"exemple-de-workflow-ciyml",level:3},{value:"Exemple d&#39;action composite <code>ros_build/action.yml</code>",id:"exemple-daction-composite-ros_buildactionyml",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"L'objectif est de cr\xe9er une architecture CI/CD compl\xe8te pour un projet de d\xe9veloppement adressant une technologie (par exemple ROS). Cette architecture doit \xeatre :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"facilement r\xe9utilisable dans d'autres projets"}),"\n",(0,s.jsx)(n.li,{children:"\xe9viter la duplication de code"}),"\n",(0,s.jsx)(n.li,{children:"maintenable et \xe9volutive ais\xe9ment"}),"\n",(0,s.jsx)(n.li,{children:"applicable \xe0 d'autres projets"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Nous avons \xe0 notre dispositions les outils suivants :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/blog/2024/02/04/ci-cd-workflow",children:"La cr\xe9ation de workflows"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/blog/2024/02/04/ci-cd-action",children:"La cr\xe9ation d'actions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/blog/2024/02/04/ci-cd-workflow",children:"La r\xe9utilisation d'actions et de workflows"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cr\xe9ation-dune-architecture-cicd",children:"Cr\xe9ation d'une architecture CI/CD"}),"\n",(0,s.jsx)(n.p,{children:"L'id\xe9e de l'architecture est de cr\xe9er un d\xe9p\xf4t contenant tous les workflows et les actions propres \xe0 une technologie / projet (par exemple ROS). Ce d\xe9p\xf4t sera ensuite utilis\xe9 comme cible pour les workflows des projets utilisant cette technologie."}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\n    subgraph Repositories ROS1\n        repo1[ros_package_1/.github/workflows/ci.yml]\n        repo2[ros_package_2/.github/workflows/ci.yml]\n        repo3[ros_package_n/.github/workflows/ci.yml]\n    end\n    subgraph ros_workflows\n        ros.yml[.github/workflows/ros1.yml]\n        ros2.yml[.github/workflows/ros2.yml]\n        ros_build.yml[ros_build/action.yml]\n        ros.yml --\x3e ros_build.yml\n        ros2.yml --\x3e ros_build.yml\n    end\n    subgraph generic_workflows\n        pre-commit.yml[.github/workflows/pre-commit.yml]\n\n    end\n\n    ros.yml --\x3e pre-commit.yml\n\n    repo1 --\x3e ros.yml\n    repo2 --\x3e ros.yml\n    repo3 --\x3e ros.yml"}),"\n",(0,s.jsxs)(n.p,{children:["Dans cet exemple, nous avons un d\xe9p\xf4t ",(0,s.jsx)(n.code,{children:"ros_workflows"})," contenant les workflows et les actions propres \xe0 la technologie ROS. Ce d\xe9p\xf4t est ensuite utilis\xe9 par les d\xe9p\xf4ts ",(0,s.jsx)(n.code,{children:"ros_package_1"}),", ",(0,s.jsx)(n.code,{children:"ros_package_2"}),", ",(0,s.jsx)(n.code,{children:"ros_package_n"})," pour ex\xe9cuter les workflows. Les diff\xe9rents workflows pr\xe9sents dans ",(0,s.jsx)(n.code,{children:"ros_workflows"})," sont les ",(0,s.jsx)(n.strong,{children:"uniques"})," points d'entr\xe9e pour les workflows des d\xe9p\xf4ts ",(0,s.jsx)(n.code,{children:"ros_package_1"}),", ",(0,s.jsx)(n.code,{children:"ros_package_2"}),", ",(0,s.jsx)(n.code,{children:"ros_package_n"}),". Ainsi s'il est n\xe9cessaire de modifier un workflow, il suffit de le faire dans le d\xe9p\xf4t ",(0,s.jsx)(n.code,{children:"ros_workflows"})," et tous les d\xe9p\xf4ts utilisant ce workflow seront mis \xe0 jour."]}),"\n",(0,s.jsxs)(n.p,{children:["De plus le d\xe9p\xf4t ",(0,s.jsx)(n.code,{children:"ros_workflows"})," peut d\xe9finir des ",(0,s.jsx)(n.code,{children:"actions-composites"})," pour \xe9viter la duplication de code entre leurs propres workflows. Ces actions sont utilis\xe9es par les workflows du d\xe9p\xf4t ",(0,s.jsx)(n.code,{children:"ros_workflows"})," et par cons\xe9quent des d\xe9p\xf4ts ",(0,s.jsx)(n.code,{children:"ros_package_1"}),", ",(0,s.jsx)(n.code,{children:"ros_package_2"}),", ",(0,s.jsx)(n.code,{children:"ros_package_n"}),". Elles peuvent aussi \xeatre appel\xe9es directement au besoin."]}),"\n",(0,s.jsxs)(n.p,{children:["Finalemet, le d\xe9p\xf4t ",(0,s.jsx)(n.code,{children:"ros_workflows"})," peut aussi utiliser des workflows g\xe9n\xe9riques (par exemple ",(0,s.jsx)(n.code,{children:"pre-commit.yml"}),") pour automatiser des t\xe2ches communes \xe0 toutes les technologies."]}),"\n",(0,s.jsxs)(n.h3,{id:"exemple-de-workflow-ros1yml",children:["Exemple de workflow ",(0,s.jsx)(n.code,{children:"ros1.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"name: Build & Test ROS Packages\n\non:\n  workflow_call:\n    inputs:\n      package-name:\n        description: 'The name of the ROS package to build and test.'\n        required: true\n        type: string\n    secrets:\n      PAT:\n        required: false\n        description: 'A GitHub Personal Access Token (PAT) used to import the private repository into the container.'\n\n\njobs:\n  pre-commit:\n    uses: catie-aq/generic_workflows/.github/workflows/pre-commit.yaml@main\n  build_and_test_ros_package:\n    runs-on: self-hosted # Use self-hosted runner\n    strategy: # Define a matrix of ROS distributions and Docker images\n      matrix:\n        include:\n          - docker_image: osrf/ros:noetic-desktop-full\n            ros_distribution: noetic\n    container: # Use the Docker image defined in the matrix\n      image: ${{ matrix.docker_image }}\n    steps:\n      - name: Setup ROS environment\n        uses: ros-tooling/setup-ros@v0.7\n        with:\n          required-ros-distributions: ${{ matrix.ros_distribution }}\n\n      - name: Build and test ROS\n        uses: ros-tooling/action-ros-ci@v0.2\n        with:\n          package-name: ${{ inputs.package-name }}\n          target-ros1-distro: ${{ matrix.ros_distribution }}\n          import-token: ${{ secrets.PAT }}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"exemple-de-workflow-ciyml",children:["Exemple de workflow ",(0,s.jsx)(n.code,{children:"ci.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: "ROS CI/CD"\n\non:\n  push:\n\njobs:\n  ros:\n    uses: {user}/ros_workflows/.github/workflows/ros.yml@main\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"exemple-daction-composite-ros_buildactionyml",children:["Exemple d'action composite ",(0,s.jsx)(n.code,{children:"ros_build/action.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"name: 'Build and Test ROS'\ndescription: 'Build and test a ROS package'\n\ninputs:\n  package-name:\n    description: 'The name of the ROS package to build and test.'\n    required: true\n    type: string\n  ros-distribution:\n    description: 'The ROS distribution to use for building and testing.'\n    required: true\n    type: string\n  import-token:\n    description: 'A GitHub Personal Access Token (PAT) used to import the private repository into the container.'\n    required: false\n    type: string\n\nruns:\n    using: \"composite\"\n    steps:\n        - run: echo \"Building and testing ROS package ${{ inputs.package-name }} for ROS ${{ inputs.ros-distribution }}.\"\n        shell: bash\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var s=o(96540);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
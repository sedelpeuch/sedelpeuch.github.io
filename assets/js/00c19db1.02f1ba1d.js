"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[2171],{24976:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=s(74848),t=s(28453);const i={title:"Tubes et tubes nomm\xe9s"},u=void 0,l={id:"enseirb/s7/prog_sys/9",title:"Tubes et tubes nomm\xe9s",description:"Les tubes sont un m\xe9canisme de communication qui permet de r\xe9aliser des",source:"@site/docs/enseirb/s7/prog_sys/9.md",sourceDirName:"enseirb/s7/prog_sys",slug:"/enseirb/s7/prog_sys/9",permalink:"/docs/enseirb/s7/prog_sys/9",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Tubes et tubes nomm\xe9s"},sidebar:"tutorialSidebar",previous:{title:"La m\xe9moire virtuelle",permalink:"/docs/enseirb/s7/prog_sys/8"},next:{title:"Introduction \xe0 l'informatique quantique",permalink:"/docs/enseirb/s7/quantique/"}},c={},d=[{value:"Les tubes ordinaires (pipe)",id:"les-tubes-ordinaires-pipe",level:2},{value:"Cr\xe9ation de tubes ordinaires",id:"cr\xe9ation-de-tubes-ordinaires",level:2},{value:"Lecture dans un tube",id:"lecture-dans-un-tube",level:2},{value:"\xc9criture dans un tube",id:"\xe9criture-dans-un-tube",level:2},{value:"Interblocage avec des tubes",id:"interblocage-avec-des-tubes",level:2},{value:"Les tubes nomm\xe9s",id:"les-tubes-nomm\xe9s",level:2}];function o(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Les tubes sont un m\xe9canisme de communication qui permet de r\xe9aliser des\ncommunications entre processus osus forme d'un flot continu d'octets. Les tubes\nsont un des \xe9l\xe9ments de l'agr\xe9ment d'utilisation d'UNIX. C'est ce m\xe9canisme qui\npermet l'approche filtre de la conception sous UNIX. M\xe9canisme de communication\nli\xe9 au syst\xe8me de gestion de fichier, les tubes nomm\xe9s ou non sont des paires\nd'entr\xe9es de la table des fichiers ouverts, associ\xe9es \xe0 une inode en m\xe9moire\ng\xe9r\xe9e par un driver sp\xe9cifique. Une entr\xe9e est utilis\xe9e par les processus qui\n\xe9crivent dans le tube une entr\xe9e pour les lecteurs du tube."}),"\n",(0,r.jsx)(n.h2,{id:"les-tubes-ordinaires-pipe",children:"Les tubes ordinaires (pipe)"}),"\n",(0,r.jsx)(n.p,{children:"Un tube est mat\xe9rialis\xe9 par deux entr\xe9es de la table des ouvertures de fichiers,\nune de ces entr\xe9es est ouverte en \xe9criture (l'entr\xe9e du tube), l'autre en\nlecture (sortie du tube). Ces deux entr\xe9es de la table de fichiers ouverts nous\ndonnent le nombre de descripteurs qui pointent sur elles. Ces valeurs peuvent\n\xeatre traduites comme :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"nombre de lecteurs = nombre de descripteurs associ\xe9s \xe0 l'entr\xe9e ouverte en\nlecture. On ne peut pas \xe9crire dans un tube sans lecteur."}),"\n",(0,r.jsxs)(n.li,{children:["nombre d'\xe9crivains = nombre de descripteurs associ\xe9s \xe0 l'entr\xe9e ouverte en\n\xe9criture. La nullit\xe9 de ce nombre d\xe9finit le comportement de la primitive\n",(0,r.jsx)(n.code,{children:"read"})," lorsque le tube est vide."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cr\xe9ation-de-tubes-ordinaires",children:"Cr\xe9ation de tubes ordinaires"}),"\n",(0,r.jsxs)(n.p,{children:["Un processus ne peut utiliser que les tubes qu'il a cr\xe9\xe9s lui-m\xeame par la\nprimitive ",(0,r.jsx)(n.code,{children:"pipe"})," ou qu'il a h\xe9rit\xe9 de son p\xe8re gr\xe2ce \xe0 l'h\xe9ritage des\ndescripteurs \xe0 travers ",(0,r.jsx)(n.code,{children:"fork"})," et ",(0,r.jsx)(n.code,{children:"exec"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"#include <unistd.h>\nint pipe(int p[2]);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["On ne peut pas manipuler les descripteurs de tubes avec les fonctions et\nprimitives : ",(0,r.jsx)(n.code,{children:"lseek, ioctl, tcsetattr"})," et ",(0,r.jsx)(n.code,{children:"tcgetattr"}),", comme il n'y a pas de\np\xe9riph\xe9rique associ\xe9 au tube (tout est fait en m\xe9moire)."]}),"\n",(0,r.jsx)(n.h2,{id:"lecture-dans-un-tube",children:"Lecture dans un tube"}),"\n",(0,r.jsxs)(n.p,{children:["On utilise l'appel syst\xe8me ",(0,r.jsx)(n.code,{children:"read"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"int nb_lu;\nnb_lu = read(p[0],buffer, TAILLE_READ);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Remarquer que la lecture se fait dans le descripteur ",(0,r.jsx)(n.code,{children:"p[0]"}),". Comportement de\nl'appel :\nSi le tube n'est pas vide et contient taille caract\xe8res :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"lecture de nb_lu = min(taille, TAILLE_READ) caract\xe8res\n"})}),"\n",(0,r.jsx)(n.p,{children:"Si le tube est vide :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Si le nombre d'\xe9crivains est nul"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"alors c'est la fin de fichier et nb_lu est nul\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Si le nombre d'\xe9crivains est non nul"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Si lecture bloquante alors sommeil\nSi lecture non bloquante alors en fonction de l'indicateur\n    O_NONBLOCK nb_lu = -1 et errno=EAGAIN\n    O_NDELAY nb_lu = 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\xe9criture-dans-un-tube",children:"\xc9criture dans un tube"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"nb_ecrit = write(p[1],buf,n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["L'\xe9criture est atomique si le nombre de caract\xe8res \xe0 \xe9crire est inf\xe9rieur \xe0\n",(0,r.jsx)(n.code,{children:"PIPE_BUF"}),", la taille du tube du sur le syst\xe8me."]}),"\n",(0,r.jsx)(n.h2,{id:"interblocage-avec-des-tubes",children:"Interblocage avec des tubes"}),"\n",(0,r.jsxs)(n.p,{children:["Un m\xeame processus a deux acc\xe8s \xe0 un tube, un acc\xe8s en lecture, un acc\xe8s en\n\xe9criture et essai de lire sur le tube vide en mode non bloquante, le processus\nest bloqu\xe9 ind\xe9finiment dans la primitive ",(0,r.jsx)(n.code,{children:"read"}),". Avec deux processus : deux\ntubes entre les deux processus, tous les deux bloqu\xe9s en lecture ou tous les\ndeux bloqu\xe9s en \xe9criture, tous les deux en attente d'une action de l'autre\nprocessus."]}),"\n",(0,r.jsx)(n.h2,{id:"les-tubes-nomm\xe9s",children:"Les tubes nomm\xe9s"}),"\n",(0,r.jsxs)(n.p,{children:["Les tubes nomm\xe9s sont des tubes qui existent dans le syst\xe8me de fichier et\npeuvent \xeatre ouverts gr\xe2ce \xe0 une r\xe9f\xe9rence. Il faut pr\xe9alablement cr\xe9er le tube\nnomm\xe9 dans le syst\xe8me de fichiers, gr\xe2ce \xe0 la primitive ",(0,r.jsx)(n.code,{children:"mknob"}),", avant de\npouvoir l'ouvrir avec la primitive ",(0,r.jsx)(n.code,{children:"open"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"int mknob(reference, mode |\xa0S_IFIFO,O);\n"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>u,x:()=>l});var r=s(96540);const t={},i=r.createContext(t);function u(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:u(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
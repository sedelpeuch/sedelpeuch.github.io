"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[166],{9143:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/03/30/09-scripting/pydantic-validation-donnees","source":"@site/blog/09-scripting/2025-03-30-pydantic-validation-donnees.md","title":"Pydantic: Validation de donn\xe9es robuste pour Python","description":"Comment utiliser Pydantic pour valider, s\xe9rialiser et documenter vos mod\xe8les de donn\xe9es en Python.","date":"2025-03-30T00:00:00.000Z","tags":[{"inline":true,"label":"Python","permalink":"/blog/tags/python"},{"inline":true,"label":"Data Validation","permalink":"/blog/tags/data-validation"},{"inline":true,"label":"API","permalink":"/blog/tags/api"},{"inline":true,"label":"FastAPI","permalink":"/blog/tags/fast-api"},{"inline":true,"label":"Scripting","permalink":"/blog/tags/scripting"}],"readingTime":6.68,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Pydantic: Validation de donn\xe9es robuste pour Python","description":"Comment utiliser Pydantic pour valider, s\xe9rialiser et documenter vos mod\xe8les de donn\xe9es en Python.","tags":["Python","Data Validation","API","FastAPI","Scripting"]},"unlisted":false,"prevItem":{"title":"Ansible : Automatisation d\'infrastructure sans agent","permalink":"/blog/2025/04/05/08-iac/ansible-introduction"},"nextItem":{"title":"Introduction \xe0 Traefik","permalink":"/blog/2025/03/15/02-network/traefik"}}')},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(96540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}},86937:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var t=i(9143),s=i(74848),a=i(28453);const r={title:"Pydantic: Validation de donn\xe9es robuste pour Python",description:"Comment utiliser Pydantic pour valider, s\xe9rialiser et documenter vos mod\xe8les de donn\xe9es en Python.",tags:["Python","Data Validation","API","FastAPI","Scripting"]},l=void 0,o={authorsImageUrls:[]},d=[{value:"Qu&#39;est-ce que Pydantic? \ud83e\udd14",id:"quest-ce-que-pydantic-",level:2},{value:"Installation de Pydantic \ud83d\ude80",id:"installation-de-pydantic-",level:2},{value:"Les bases de Pydantic \ud83d\udcda",id:"les-bases-de-pydantic-",level:2},{value:"D\xe9finition de mod\xe8les",id:"d\xe9finition-de-mod\xe8les",level:3},{value:"Validation automatique",id:"validation-automatique",level:3},{value:"S\xe9rialisation et d\xe9s\xe9rialisation",id:"s\xe9rialisation-et-d\xe9s\xe9rialisation",level:3},{value:"Fonctionnalit\xe9s avanc\xe9es \ud83d\udd27",id:"fonctionnalit\xe9s-avanc\xe9es-",level:2},{value:"Validateurs personnalis\xe9s",id:"validateurs-personnalis\xe9s",level:3},{value:"Types complexes",id:"types-complexes",level:3},{value:"Configuration des mod\xe8les",id:"configuration-des-mod\xe8les",level:3},{value:"Pydantic et FastAPI : le duo parfait \ud83e\udd1d",id:"pydantic-et-fastapi--le-duo-parfait-",level:2},{value:"Pydantic v1 vs v2 : les diff\xe9rences majeures \ud83d\udd04",id:"pydantic-v1-vs-v2--les-diff\xe9rences-majeures-",level:2},{value:"Bonnes pratiques avec Pydantic \ud83d\udc4d",id:"bonnes-pratiques-avec-pydantic-",level:2},{value:"Cas d&#39;utilisation concrets \ud83d\udee0\ufe0f",id:"cas-dutilisation-concrets-\ufe0f",level:2},{value:"Validation de configuration",id:"validation-de-configuration",level:3},{value:"Traitement de donn\xe9es d&#39;API",id:"traitement-de-donn\xe9es-dapi",level:3},{value:"Conclusion \ud83c\udfaf",id:"conclusion-",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Dans un monde o\xf9 les APIs et les microservices se multiplient, la validation des donn\xe9es est devenue une pr\xe9occupation majeure. Pydantic s'impose comme la solution de r\xe9f\xe9rence en Python pour d\xe9finir et valider des structures de donn\xe9es. D\xe9couvrons ensemble cette biblioth\xe8que puissante qui r\xe9volutionne la fa\xe7on dont nous manipulons les donn\xe9es. \ud83d\udd0d"}),"\n",(0,s.jsx)(n.h2,{id:"quest-ce-que-pydantic-",children:"Qu'est-ce que Pydantic? \ud83e\udd14"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic est une biblioth\xe8que Python qui permet de valider des donn\xe9es et de g\xe9rer les param\xe8tres de configuration en utilisant les annotations de type Python. Elle offre plusieurs avantages :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Validation forte bas\xe9e sur les types Python"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Conversion automatique des donn\xe9es d'entr\xe9e"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"G\xe9n\xe9ration de documentation JSON Schema"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"S\xe9rialisation et d\xe9s\xe9rialisation faciles"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performances optimis\xe9es"})," gr\xe2ce \xe0 l'utilisation de code compil\xe9 en Rust"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Pydantic est notamment le syst\xe8me de mod\xe8les utilis\xe9 par FastAPI, ce qui en fait un incontournable pour les d\xe9veloppeurs d'APIs modernes."}),"\n",(0,s.jsx)(n.h2,{id:"installation-de-pydantic-",children:"Installation de Pydantic \ud83d\ude80"}),"\n",(0,s.jsx)(n.p,{children:"L'installation de Pydantic est simple avec pip :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'pip install pydantic\n\n# Pour la version 2.x avec des performances optimis\xe9es\npip install "pydantic>=2.0.0"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Si vous utilisez Poetry (comme nous l'avons vu dans ",(0,s.jsx)(n.a,{href:"/blog/2025/03/01/09-scripting/poetry-python-dependency",children:"notre article pr\xe9c\xe9dent"}),") :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"poetry add pydantic\n"})}),"\n",(0,s.jsx)(n.h2,{id:"les-bases-de-pydantic-",children:"Les bases de Pydantic \ud83d\udcda"}),"\n",(0,s.jsx)(n.h3,{id:"d\xe9finition-de-mod\xe8les",children:"D\xe9finition de mod\xe8les"}),"\n",(0,s.jsxs)(n.p,{children:["La premi\xe8re \xe9tape avec Pydantic consiste \xe0 d\xe9finir un mod\xe8le en cr\xe9ant une classe qui h\xe9rite de ",(0,s.jsx)(n.code,{children:"BaseModel"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel\nfrom typing import Optional, List\nfrom datetime import date\n\nclass User(BaseModel):\n    id: int\n    name: str\n    email: str\n    birth_date: date\n    is_active: bool = True\n    tags: List[str] = []\n    website: Optional[str] = None\n"})}),"\n",(0,s.jsx)(n.h3,{id:"validation-automatique",children:"Validation automatique"}),"\n",(0,s.jsx)(n.p,{children:"Une fois le mod\xe8le d\xe9fini, Pydantic valide automatiquement les donn\xe9es lors de la cr\xe9ation d'une instance :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Validation r\xe9ussie\nuser = User(\n    id=1,\n    name="John Doe",\n    email="john@example.com",\n    birth_date="1990-01-01",  # Conversion automatique en objet date\n    tags=["admin", "user"]\n)\n\n# Validation \xe9chou\xe9e\ntry:\n    User(\n        id="not_an_integer",  # Erreur: la valeur n\'est pas un entier\n        name=123,             # Sera converti en string automatiquement\n        email="invalid_email" # Pas d\'erreur par d\xe9faut: ce n\'est pas une validation de format\n    )\nexcept ValueError as e:\n    print(f"Erreur de validation: {e}")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"s\xe9rialisation-et-d\xe9s\xe9rialisation",children:"S\xe9rialisation et d\xe9s\xe9rialisation"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic simplifie la conversion des mod\xe8les en dictionnaires, JSON ou d'autres formats :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Conversion en dictionnaire\nuser_dict = user.model_dump()\n\n# Conversion en JSON\nuser_json = user.model_dump_json()\n\n# D\xe9s\xe9rialisation depuis un dictionnaire\nuser_data = {\n    "id": 2,\n    "name": "Jane Smith",\n    "email": "jane@example.com",\n    "birth_date": "1992-03-15"\n}\nnew_user = User.model_validate(user_data)\n\n# D\xe9s\xe9rialisation depuis JSON\nuser_from_json = User.model_validate_json(\'{"id": 3, "name": "Bob", "email": "bob@example.com", "birth_date": "1985-07-20"}\')\n'})}),"\n",(0,s.jsx)(n.h2,{id:"fonctionnalit\xe9s-avanc\xe9es-",children:"Fonctionnalit\xe9s avanc\xe9es \ud83d\udd27"}),"\n",(0,s.jsx)(n.h3,{id:"validateurs-personnalis\xe9s",children:"Validateurs personnalis\xe9s"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic permet de cr\xe9er des validateurs personnalis\xe9s pour des v\xe9rifications plus complexes :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel, field_validator, EmailStr\n\nclass AdvancedUser(BaseModel):\n    id: int\n    name: str\n    email: EmailStr  # Type sp\xe9cial pour valider les emails\n    password: str\n    password_confirm: str\n\n    @field_validator('name')\n    @classmethod\n    def name_must_contain_space(cls, v):\n        if ' ' not in v:\n            raise ValueError('Le nom doit contenir un espace (pr\xe9nom et nom)')\n        return v.title()  # Convertit le nom en format titre\n\n    @field_validator('password_confirm')\n    @classmethod\n    def passwords_match(cls, v, info):\n        if 'password' in info.data and v != info.data['password']:\n            raise ValueError('Les mots de passe ne correspondent pas')\n        return v\n"})}),"\n",(0,s.jsx)(n.h3,{id:"types-complexes",children:"Types complexes"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic prend en charge une vari\xe9t\xe9 de types complexes :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel, HttpUrl, conlist, constr\nfrom typing import Dict, Union\n\nclass Product(BaseModel):\n    name: str\n    price: float\n    description: Optional[str] = None\n\nclass Order(BaseModel):\n    order_id: str\n    # Une liste avec au moins 1 \xe9l\xe9ment\n    products: conlist(Product, min_length=1)\n    # Une cha\xeene avec contrainte de longueur\n    customer_id: constr(min_length=5, max_length=20)\n    # Union de types possibles\n    payment_method: Union[str, Dict[str, str]]\n    # URL valide\n    store_url: HttpUrl\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configuration-des-mod\xe8les",children:"Configuration des mod\xe8les"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic offre de nombreuses options de configuration pour contr\xf4ler le comportement des mod\xe8les :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'class Settings(BaseModel):\n    model_config = {\n        # Permettre les champs suppl\xe9mentaires\n        "extra": "forbid",\n        # Valider \xe9galement les attributs lors de l\'assignation\n        "validate_assignment": True,\n        # Aliases pour les noms de champs JSON\n        "populate_by_name": True,\n        # Noms JSON en format camelCase\n        "alias_generator": lambda s: \'\'.join(\n            word.capitalize() if i else word\n            for i, word in enumerate(s.split(\'_\'))\n        ),\n    }\n\n    database_url: str\n    api_key: str\n    debug_mode: bool = False\n    max_connections: int = 100\n'})}),"\n",(0,s.jsx)(n.h2,{id:"pydantic-et-fastapi--le-duo-parfait-",children:"Pydantic et FastAPI : le duo parfait \ud83e\udd1d"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic est particuli\xe8rement puissant lorsqu'il est utilis\xe9 avec FastAPI :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Path\nfrom pydantic import BaseModel, Field\nfrom typing import List\n\napp = FastAPI()\n\nclass Item(BaseModel):\n    name: str = Field(..., example="Smartphone")\n    description: Optional[str] = Field(None, example="Un t\xe9l\xe9phone dernier cri")\n    price: float = Field(..., gt=0, example=899.99)\n    tax: Optional[float] = Field(None, example=20.0)\n\n    model_config = {\n        "json_schema_extra": {\n            "examples": [\n                {\n                    "name": "Smartphone",\n                    "description": "Un t\xe9l\xe9phone dernier cri",\n                    "price": 899.99,\n                    "tax": 20.0,\n                }\n            ]\n        }\n    }\n\n@app.post("/items/", response_model=Item)\nasync def create_item(item: Item):\n    return item\n\n@app.get("/items/{item_id}", response_model=Item)\nasync def read_item(\n    item_id: int = Path(..., title="L\'ID de l\'item \xe0 r\xe9cup\xe9rer", ge=1)\n):\n    # Logic to retrieve item\n    return {"name": "Example Item", "price": 99.99, "description": "A sample item"}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Avec cette configuration, FastAPI :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Valide automatiquement les requ\xeates entrantes"}),"\n",(0,s.jsx)(n.li,{children:"Convertit les donn\xe9es en objets Python typ\xe9s"}),"\n",(0,s.jsx)(n.li,{children:"G\xe9n\xe8re une documentation OpenAPI interactive"}),"\n",(0,s.jsx)(n.li,{children:"Effectue la s\xe9rialisation des r\xe9ponses"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pydantic-v1-vs-v2--les-diff\xe9rences-majeures-",children:"Pydantic v1 vs v2 : les diff\xe9rences majeures \ud83d\udd04"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic v2 (sorti en 2023) a introduit plusieurs changements importants :"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Fonctionnalit\xe9"}),(0,s.jsx)(n.th,{children:"v1"}),(0,s.jsx)(n.th,{children:"v2"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Moteur de validation"}),(0,s.jsx)(n.td,{children:"Python pur"}),(0,s.jsx)(n.td,{children:"Core en Rust (10-50x plus rapide)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"API"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:".dict()"}),", ",(0,s.jsx)(n.code,{children:".json()"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:".model_dump()"}),", ",(0,s.jsx)(n.code,{children:".model_dump_json()"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Validateurs"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"@validator"}),", ",(0,s.jsx)(n.code,{children:"@root_validator"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"@field_validator"}),", ",(0,s.jsx)(n.code,{children:"@model_validator"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Types g\xe9n\xe9riques"}),(0,s.jsx)(n.td,{children:"Support limit\xe9"}),(0,s.jsx)(n.td,{children:"Support am\xe9lior\xe9"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"JSON Schema"}),(0,s.jsx)(n.td,{children:"G\xe9n\xe9ration basique"}),(0,s.jsx)(n.td,{children:"Plus complet et personnalisable"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Exemple de migration :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Pydantic v1\nfrom pydantic import BaseModel, validator\n\nclass UserV1(BaseModel):\n    name: str\n    age: int\n\n    @validator('age')\n    def check_age(cls, v):\n        if v < 18:\n            raise ValueError('Doit \xeatre majeur')\n        return v\n\n    # Conversion en dict/json\n    data = user.dict()\n    json_data = user.json()\n\n# Pydantic v2\nfrom pydantic import BaseModel, field_validator\n\nclass UserV2(BaseModel):\n    name: str\n    age: int\n\n    @field_validator('age')\n    @classmethod  # Maintenant obligatoire\n    def check_age(cls, v):\n        if v < 18:\n            raise ValueError('Doit \xeatre majeur')\n        return v\n\n    # Conversion en dict/json\n    data = user.model_dump()\n    json_data = user.model_dump_json()\n"})}),"\n",(0,s.jsx)(n.h2,{id:"bonnes-pratiques-avec-pydantic-",children:"Bonnes pratiques avec Pydantic \ud83d\udc4d"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Utilisez des types pr\xe9cis"}),": Les types comme ",(0,s.jsx)(n.code,{children:"EmailStr"}),", ",(0,s.jsx)(n.code,{children:"HttpUrl"}),", ",(0,s.jsx)(n.code,{children:"conint"}),", etc. am\xe9liorent la validation"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cr\xe9ez une hi\xe9rarchie de mod\xe8les"}),": Utilisez l'h\xe9ritage pour les structures complexes"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class BaseUser(BaseModel):\n    id: int\n    name: str\n\nclass UserIn(BaseUser):\n    password: str\n\nclass UserOut(BaseUser):\n    is_active: bool\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Exploitez les validators pour les r\xe8gles m\xe9tier complexes"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'@field_validator("reservation_date")\n@classmethod\ndef validate_date_is_future(cls, v, info):\n    if v <= datetime.now():\n        raise ValueError("La r\xe9servation doit \xeatre dans le futur")\n    return v\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Utilisez FrozenModel pour l'immutabilit\xe9"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel, ConfigDict\n\nclass Config(BaseModel):\n    model_config = ConfigDict(frozen=True)\n    api_key: str\n    debug: bool = False\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Ajoutez des exemples pour am\xe9liorer la documentation"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'class Item(BaseModel):\n    name: str\n    price: float\n\n    model_config = {\n        "json_schema_extra": {"examples": [{"name": "Foo", "price": 35.4}]}\n    }\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cas-dutilisation-concrets-\ufe0f",children:"Cas d'utilisation concrets \ud83d\udee0\ufe0f"}),"\n",(0,s.jsx)(n.h3,{id:"validation-de-configuration",children:"Validation de configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel, Field, SecretStr\nimport yaml\nfrom pathlib import Path\n\nclass DatabaseConfig(BaseModel):\n    host: str = "localhost"\n    port: int = 5432\n    user: str\n    password: SecretStr\n    name: str\n    ssl: bool = False\n\nclass ApiConfig(BaseModel):\n    endpoint: str\n    timeout: int = 30\n    retries: int = 3\n\nclass AppConfig(BaseModel):\n    debug: bool = False\n    log_level: str = "INFO"\n    database: DatabaseConfig\n    api: ApiConfig\n\n# Charger la configuration depuis un fichier YAML\nconfig_path = Path("config.yaml")\nwith open(config_path) as f:\n    config_dict = yaml.safe_load(f)\n\n# Valider la configuration\ntry:\n    config = AppConfig.model_validate(config_dict)\n    print(f"Configuration valide: {config.model_dump(exclude={\'database\': {\'password\'}})}")\nexcept ValueError as e:\n    print(f"Configuration invalide: {e}")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"traitement-de-donn\xe9es-dapi",children:"Traitement de donn\xe9es d'API"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import httpx\nfrom pydantic import BaseModel, HttpUrl\nfrom typing import List, Optional\nfrom datetime import datetime\n\nclass Author(BaseModel):\n    name: str\n    url: Optional[HttpUrl] = None\n\nclass Article(BaseModel):\n    id: int\n    title: str\n    content: str\n    published: datetime\n    author: Author\n    tags: List[str] = []\n\nasync def fetch_articles():\n    async with httpx.AsyncClient() as client:\n        response = await client.get("https://api.example.com/articles")\n        data = response.json()\n\n        # Valider et convertir les donn\xe9es en objets Python\n        articles = [Article.model_validate(item) for item in data]\n\n        # Maintenant on peut travailler avec des objets Python typ\xe9s\n        for article in articles:\n            print(f"Article: {article.title}, Publi\xe9 le: {article.published.strftime(\'%d/%m/%Y\')}")\n            print(f"Auteur: {article.author.name}")\n            print("-" * 50)\n\n        return articles\n'})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion-",children:"Conclusion \ud83c\udfaf"}),"\n",(0,s.jsx)(n.p,{children:"Pydantic s'est impos\xe9 comme un outil indispensable dans l'\xe9cosyst\xe8me Python moderne, particuli\xe8rement pour le d\xe9veloppement d'APIs et d'applications manipulant des donn\xe9es structur\xe9es. Ses points forts :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Validation robuste"})," des donn\xe9es bas\xe9e sur les types Python standard"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API intuitive"})," permettant de d\xe9finir rapidement des mod\xe8les complexes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performances impressionnantes"})," gr\xe2ce au moteur de validation en Rust"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Int\xe9gration harmonieuse"})," avec FastAPI et d'autres frameworks"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);
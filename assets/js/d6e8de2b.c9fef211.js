"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[76],{69028:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>o});var i=s(17624),t=s(4552);const a={title:"Objet et encapsulation - Les classes"},r=void 0,c={id:"enseirb/s7/poo/3",title:"Objet et encapsulation - Les classes",description:"D\xe9finition la sp\xe9cification des messages",source:"@site/docs/enseirb/s7/poo/3.md",sourceDirName:"enseirb/s7/poo",slug:"/enseirb/s7/poo/3",permalink:"/docs/enseirb/s7/poo/3",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Objet et encapsulation - Les classes"},sidebar:"tutorialSidebar",previous:{title:"Objet et encapsulation - Les objets",permalink:"/docs/enseirb/s7/poo/2"},next:{title:"Objet et encapsulation - Variables et m\xe9thodes de classe",permalink:"/docs/enseirb/s7/poo/4"}},l={},o=[{value:"Classe Java",id:"classe-java",level:2},{value:"Paquetage",id:"paquetage",level:3},{value:"Organisation physique des paquetages",id:"organisation-physique-des-paquetages",level:4},{value:"Classe concr\xe8te",id:"classe-concr\xe8te",level:2},{value:"Port\xe9e des membres d&#39;une classe",id:"port\xe9e-des-membres-dune-classe",level:3},{value:"D\xe9finition d&#39;une classe concr\xe8te",id:"d\xe9finition-dune-classe-concr\xe8te",level:3},{value:"Variable d&#39;instance",id:"variable-dinstance",level:3},{value:"M\xe9thode d&#39;instance",id:"m\xe9thode-dinstance",level:3},{value:"Constructeur",id:"constructeur",level:3},{value:"Lien &quot;a-un&quot; entre classes",id:"lien-a-un-entre-classes",level:2},{value:"Relation d&#39;utilisation dans la r\xe9alisation",id:"relation-dutilisation-dans-la-r\xe9alisation",level:3},{value:"Factoriser du code",id:"factoriser-du-code",level:3}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"D\xe9finition"})," : Une ",(0,i.jsx)(n.strong,{children:"classe"})," est un moule qui d\xe9crit le ",(0,i.jsx)(n.strong,{children:"quoi"})," : la sp\xe9cification des messages\nqui peuvent \xeatre envoy\xe9s \xe0 l'objet. Et le ",(0,i.jsx)(n.strong,{children:"comment"})," la mani\xe8re de r\xe9aliser\ncette sp\xe9cification."]}),"\n",(0,i.jsx)(n.p,{children:"Pour instancier une classe, se r\xe9partit en trois formes :"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Classe Concr\xe8te"})," : une classe instanciable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Classe abstraite"})," : la r\xe9alisation est incompl\xe8te, au moins une des\nm\xe9thodes d'instance n'a pas de mise en oeuvre (pas corps d\xe9fini)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Classe abstraite pure ou interface"})," : aucune r\xe9alisation n'est d\xe9finie,\nelle contient les d\xe9clarations des m\xe9thodes d'instance."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ce chapitre est centr\xe9 sur la construction des classes concr\xe8tes."}),"\n",(0,i.jsx)(n.h2,{id:"classe-java",children:"Classe Java"}),"\n",(0,i.jsx)(n.p,{children:"La syntaxe du langage Java diff\xe9rencie la construction d'une classe contenant\nune r\xe9alisation et d'une classe ne contenant pas de r\xe9alisation."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Construction avec r\xe9alisation :"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["classe concr\xe8te avec le mot cl\xe9 seul ",(0,i.jsx)(n.code,{children:"class"})]}),"\n",(0,i.jsxs)(n.li,{children:["classe abstraite en ajoutant le mot-cl\xe9 ",(0,i.jsx)(n.code,{children:"abstract"})," au mot cl\xe9 ",(0,i.jsx)(n.code,{children:"class"})]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Construction sans r\xe9alisation : classe abstraite pure avec le mot-cl\xe9\n",(0,i.jsx)(n.code,{children:"interface"}),". Cette construction ne contient ni attributs, ni constructeurs."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Une classe/interface Java correspond \xe0 un fichier ",(0,i.jsx)(n.code,{children:".class"})," obtenu apr\xe8s\njava d'un fichier source. Ce fichier (en \"bytecode\" ou code\ninterm\xe9diaire) contient le code \xe0 ex\xe9cuter mais aussi les informations sur la\nd\xe9finition de la classe, par exemple : le type des param\xe8tres d'une m\xe9thode."]}),"\n",(0,i.jsxs)(n.p,{children:["Le contenu des fichiers ",(0,i.jsx)(n.code,{children:".class"})," est utilis\xe9 par le compilateur (pour les\ninformations de type) et par la machine virtuelle java (JVM) (interpr\xe9tation du\ncode interm\xe9diaire)"]}),"\n",(0,i.jsx)(n.h3,{id:"paquetage",children:"Paquetage"}),"\n",(0,i.jsxs)(n.p,{children:["Les paquetages permettent de regrouper les classes / interfaces par th\xe8me. Le\nsyst\xe8me de paquetage est hi\xe9rarchique avec la notion de sous-paquetage. Le\ncaract\xe8re . sert de s\xe9parateur. Les paquetages commen\xe7ant par ",(0,i.jsx)(n.code,{children:"java, javax"})," font\npartie de la distribution standard (JRE et JDK)."]}),"\n",(0,i.jsxs)(n.p,{children:["Un paquetage correspond \xe0 un domaine de nom : le nom d'une classe / interface est\nunique dans un paquetage. Le nom complet d'une classe / interface est constitu\xe9\nde la hi\xe9rarchie de paquetage puis du nom de la classe/interface. Par exemple\n",(0,i.jsx)(n.code,{children:"java.lang.String"}),". L'inclusion d'une classe/interface dans un paquetage est\npr\xe9cis\xe9e par l'instruction ",(0,i.jsx)(n.code,{children:"package nom"})," sur la premi\xe8re ligne du fichier\nsource. Sans ce mot-cl\xe9, les classes sont incluses dans un paquetage unique sans\nnom (paquetage anonyme ou paquetage par d\xe9faut). Pour d\xe9signer une\nclasse/interface \xe0 l'ext\xe9rieur d'un paquetage, il est n\xe9cessaire d'utiliser son\nnom complet : ",(0,i.jsx)(n.code,{children:"matos.on.DentBleu maDent = new matos.onde.DentBleu();"}),". Dans\nl'\xe9criture d'un fichier source, il est possible de raccourcir le nom complet\nd'une classe \xe0 son nom, en utilisant le mot cl\xe9 ",(0,i.jsx)(n.code,{children:"import"}),". Au d\xe9but du fichier\nsource, l'instruction ",(0,i.jsx)(n.code,{children:"import matos.onde.DentBleu"}),"; permet de d\xe9signer la classe\nuniquement par ",(0,i.jsx)(n.code,{children:"DentBleu"}),". Le compilateur lui attribue son nom complet."]}),"\n",(0,i.jsx)(n.h4,{id:"organisation-physique-des-paquetages",children:"Organisation physique des paquetages"}),"\n",(0,i.jsxs)(n.p,{children:["L'organisation physique des fichiers ",(0,i.jsx)(n.code,{children:".class"})," correspond \xe0 la hi\xe9rarchie de\npaquetage. Le fichier ",(0,i.jsx)(n.code,{children:"String.class"})," se trouve dans l'arborescence de r\xe9pertoire\n",(0,i.jsx)(n.code,{children:"java/lang"}),". Lorsque le compilateur ou la machine virtuelle ont besoin de la\nd\xe9finition d'une classe, ils utilisent son nom complet comme chemin de recherche\ndu fichier ",(0,i.jsx)(n.code,{children:".class"}),". Par d\xe9faut, la recherche s'effectue \xe0 partir du r\xe9pertoire\ncourant (celui du lancement de la commande)."]}),"\n",(0,i.jsxs)(n.p,{children:["L'option ",(0,i.jsx)(n.code,{children:"-cp"})," et la variable d'environnement ",(0,i.jsx)(n.code,{children:"CLASSPATH"})," permettant d'indiquer\nles r\xe9pertoires \xe0 analyser pour trouver ce chemin."]}),"\n",(0,i.jsx)(n.h2,{id:"classe-concr\xe8te",children:"Classe concr\xe8te"}),"\n",(0,i.jsxs)(n.p,{children:["La construction Java ",(0,i.jsx)(n.code,{children:"class"})," contient trois cat\xe9gories de membre : les\nvariables, les m\xe9thodes et les constructeurs."]}),"\n",(0,i.jsx)(n.h3,{id:"port\xe9e-des-membres-dune-classe",children:"Port\xe9e des membres d'une classe"}),"\n",(0,i.jsxs)(n.p,{children:["Les modificateurs de porte pr\xe9cisent la ",(0,i.jsx)(n.em,{children:"port\xe9e d'utilisation"})," d'un membre d'une\nclasse. Ils se placent devant chaque d\xe9finition :"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"private"})," : accessible uniquement par la classe"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"public"})," : accessible partout"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"au paquetage"})," (pas de mot cl\xe9) : accessible par les classes du m\xeame paquetage"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Une classe poss\xe8de deux port\xe9es. Sans mot-cl\xe9, sa port\xe9e est restreinte \xe0 son\npaquetage. Avec le mot-cl\xe9 ",(0,i.jsx)(n.code,{children:"public"}),", elle est accessible \xe0 l'extrieur de son\npaquetage : ",(0,i.jsx)(n.code,{children:"public class DentBleu"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"d\xe9finition-dune-classe-concr\xe8te",children:"D\xe9finition d'une classe concr\xe8te"}),"\n",(0,i.jsx)(n.p,{children:"D\xe9finition d'une classe concr\xe8ete Java et de ses membres"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"[public] class NomClasse { \n  //Variables d'instance/attributs,\n  [final] [public|private] type nom [= expression];\n  \n  //M\xe9thodes d'instance,\n  [public | private] typeRetour m\xe9thodeInstance([liste de param\xe8tres]) {\n    //code\n  }\n  \n  //constructeurs\n  [public | private] NomClasse ([liste de param\xe8tres]){\n    //code\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"variable-dinstance",children:"Variable d'instance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"C'est une variable locale \xe0 chaque instance. Sa valeur est stock\xe9e dans la\nzone m\xe9moire de l'instance."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Son initialisation s'effectue soit \xe0 sa d\xe9claration soit dans le code d'une\nconstructeur. La machine virtuelle Java initialise syst\xe9matiquement les\nvariables d'instance avec une valeur par d\xe9faut d\xe9pendant du type\n(r\xe9f\xe9rence/null, int/0, boolean/false)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Le mot-cl\xe9 ",(0,i.jsx)(n.code,{children:"final"})," devant la d\xe9finition d'une variable correspond \xe0 une\nvariable constante. Son initialisation est possible dans un constructeur."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public class Telecommande{\n  private int nbPortes;\n  private final ProteCharniere[] mesPortes;\n  private final int NB_MAX;\n  \n  public Telecommande(int capacite){\n    NB_MAX = capacite;\n    nbPortes = 0; \n    mesPortes = new PorteCharniere[NB_MAX];\n  }\n  \n  public void positionner(Portecharniere p){\n    if(NB_MAX <= nbPortes)\n      return;\n    mesPortes[nbPortes] = p;\n    nbPortes++;\n  }\n  public boolean estRempli(){\n    return NB_MAX <= nbPortes;\n  }\n  public void activer(int numero){\n    mesPortes[numero].ouvrir();\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"m\xe9thode-dinstance",children:"M\xe9thode d'instance"}),"\n",(0,i.jsx)(n.p,{children:"Une m\xe9thode d'instance s'applique \xe0 une instance. Il existe deux cat\xe9gories de\nm\xe9thode :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"m\xe9thode d'acc\xe8s, ou accesseur. Elle donne des informations sur l'\xe9tat des\nattributs."}),"\n",(0,i.jsx)(n.li,{children:"m\xe9thode d'alt\xe9ration ou modificateur. Elle modifie l'\xe9tat des attributs."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Le m\xe9canisme de surcharge autorise plusieurs m\xe9thodes \xe0 porter le m\xeame nom. La\ndistinction se fait, \xe0 la java, en fonction de la liste des param\xe8tres\nd'appel (nombre, type et ordre). Par exemple, la m\xe9thode ",(0,i.jsx)(n.code,{children:"println"})," de la classe\n",(0,i.jsx)(n.code,{children:"java.io.PrintStream"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Le mot cl\xe9 ",(0,i.jsx)(n.code,{children:"this"})," d\xe9signe / r\xe9f\xe9rence l'instance qui vient de recevoir le\nmessage. Il est utilis\xe9 dans le code"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Soit pour passer l'objet en param\xe8tre d'une m\xe9thode (ou d'un constructeur)"}),"\n",(0,i.jsx)(n.li,{children:"Soit pour d\xe9signer un attribut en cas d'ambigu\xeft\xe9"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public class Telecommande{\n  private int nbPortes;\n  private final Portecharniere[] mesPortes;\n  \n  public Telecommande(int nbPortes){\n    this.nbPortes = 0; \n    this.mesPortes = new PorteCharniere[nbPortes];\n  }\n  \n  public void positionner(PorteCharniere p){\n    if(this.estRempli())\n      return;\n    this.mesPortes[nbPortes]=p;\n    this.nbPortes++;\n  }\n  public boolean estRempli(){\n    return this.mesPorteS.length <= this.nbPortes;\n  }\n  public void activer(int numero){\n    this.mesPortes[nummero].ouvrir();\n  }\n  public void desactiver(int numero){\n    this.mesPortes[numero].fermer();\n  }\n  public void desactiver(){\n    for(int i = 0; i < this.nbPortes; i++)\n      if(!this.mesPortes[i].estFerme())\n        this.desactiver(i);\n  }\n}\n//Donner les r\xe9f\xe9rences this \xe0 conserver ? \n"})}),"\n",(0,i.jsx)(n.p,{children:"Exemple d'appel avec surcharge r\xe9solu \xe0 la compilation :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"tele.desactiver(1);\ntele.desactiver();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"constructeur",children:"Constructeur"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un constructeur n'est pas une m\xe9thode. Il est uniquement appel\xe9 \xe0\n",(0,i.jsx)(n.em,{children:"l'instanciation"}),". Son code assure la bonne initialisation des variables\nd'instance."]}),"\n",(0,i.jsx)(n.li,{children:"Le constructeur prendre le nom de la classe. Il n'a pas de type de\nretour."}),"\n",(0,i.jsxs)(n.li,{children:["L'instance existe au moment de l'appel du constructeur. Le code du\nconstructeur peut utiliser les m\xe9thodes d'instance et la r\xe9f\xe9rence ",(0,i.jsx)(n.code,{children:"this"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Si une classe ne contient pas de constructeur le compilateur Java ajoute un\nconstructeur publique sans param\xe8tre avec un corps vide (d\xe9sign\xe9 par le terme\nconstructeur par d\xe9faut)."}),"\n",(0,i.jsx)(n.li,{children:"La surcharge des constructeurs est autoris\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:["Avec la d\xe9finition de plusieurs constructeurs, il est n\xe9cessaire d'avoir un\nm\xe9canisme de factorisation du code d'initialisation. Un constructeur peut\nd\xe9clencher le code d'un autre constructeur par l'instruction (qui utilise le\nm\xe9canisme de surcharge) : ",(0,i.jsx)(n.code,{children:"this(par1, par2, par3)"}),". Cette instruction doit \xeatre\nla premi\xe8re ligne du constructeur."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"lien-a-un-entre-classes",children:'Lien "a-un" entre classes'}),"\n",(0,i.jsx)(n.p,{children:"Le lien \"a-un\" correspond \xe0 la relation d'utilisation la plus basique : la\nr\xe9alisation d'une encapsulation n\xe9cessite l'appel aux m\xe9thodes d'une autre\nencapsulation."}),"\n",(0,i.jsx)(n.h3,{id:"relation-dutilisation-dans-la-r\xe9alisation",children:"Relation d'utilisation dans la r\xe9alisation"}),"\n",(0,i.jsxs)(n.p,{children:["La classe ",(0,i.jsx)(n.code,{children:"PorteCharniere"}),' poss\xe8de un lien "a-un" avec la classe ',(0,i.jsx)(n.code,{children:"DentBleu"}),". Une\ninstance de ",(0,i.jsx)(n.code,{children:"PorteCharniere"})," contient dans ses attributs la r\xe9f\xe9rence \xe0 une\ninstance de ",(0,i.jsx)(n.code,{children:"DentBleu"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans notre cas de r\xe9alisation, l'instant de ",(0,i.jsx)(n.code,{children:"DentBleu"})," ne peut pas \xeatre partag\xe9e\net doit \xeatre utilis\xe9e d\xe8s l'instanciation de ",(0,i.jsx)(n.code,{children:"PorteCharniere"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:['Le lien "a-un" se traduit dans le code de la classe ',(0,i.jsx)(n.code,{children:"PorteCharniere"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["d\xe9finition d'une variable d'instance du type ",(0,i.jsx)(n.code,{children:"DentBleu"})]}),"\n",(0,i.jsxs)(n.li,{children:["instanciation de ",(0,i.jsx)(n.code,{children:"DentBleu"})," dans le constructeur et affectation \xe0 la variable\nd'instance"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"factoriser-du-code",children:"Factoriser du code"}),"\n",(0,i.jsxs)(n.p,{children:["Pour \xe9viter de dupliquer le code, la construction de la classe\n",(0,i.jsx)(n.code,{children:"PorteVerrouCharniere"}),' peut se faire en utilisant un lien "a-un" avec la classe\n',(0,i.jsx)(n.code,{children:"PorteCharniere"}),". L'instanciation de la classe ",(0,i.jsx)(n.code,{children:"PorteVerrouCharniere"})," doit\ninstancier la classe ",(0,i.jsx)(n.code,{children:"PorteCharniere"})]})]})}function u(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4552:(e,n,s)=>{s.d(n,{I:()=>c,M:()=>r});var i=s(11504);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);
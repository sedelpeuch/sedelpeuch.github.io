"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[1399],{93646:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"enseirb/s7/poo/8","title":"Autres m\xe9canismes (non objet) - Le M\xe9canisme des exceptions","description":"D\xe9finition : Le m\xe9canisme des exceptions est une technique de gestion","source":"@site/docs/enseirb/s7/poo/8.md","sourceDirName":"enseirb/s7/poo","slug":"/enseirb/s7/poo/8","permalink":"/pr-preview/pr-15/docs/enseirb/s7/poo/8","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Autres m\xe9canismes (non objet) - Le M\xe9canisme des exceptions"},"sidebar":"tutorialSidebar","previous":{"title":"Substitution d\'objets - Hi\xe9rarchie de classes","permalink":"/pr-preview/pr-15/docs/enseirb/s7/poo/7"},"next":{"title":"Autres m\xe9canismes (non objet) - Les types param\xe9tr\xe9s","permalink":"/pr-preview/pr-15/docs/enseirb/s7/poo/9"}}');var t=r(74848),i=r(28453);const a={title:"Autres m\xe9canismes (non objet) - Le M\xe9canisme des exceptions"},c=void 0,o={},l=[{value:"La gestion d&#39;erreurs",id:"la-gestion-derreurs",level:2},{value:"Le m\xe9canisme de transmission de l&#39;erreur",id:"le-m\xe9canisme-de-transmission-de-lerreur",level:3},{value:"Le m\xe9canisme d&#39;exception du langage Java",id:"le-m\xe9canisme-dexception-du-langage-java",level:3},{value:"Les classes d&#39;exception",id:"les-classes-dexception",level:2},{value:"La lev\xe9e d&#39;une exception",id:"la-lev\xe9e-dune-exception",level:2},{value:"La capture d&#39;une exception",id:"la-capture-dune-exception",level:2},{value:"Sp\xe9cification de la propagation",id:"sp\xe9cification-de-la-propagation",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"D\xe9finition :"})," Le m\xe9canisme des exceptions est une technique de gestion\nd'erreurs qui permet de transmettre une erreur en dehors du flot normal de la\npile d'appel."]}),"\n",(0,t.jsx)(n.h2,{id:"la-gestion-derreurs",children:"La gestion d'erreurs"}),"\n",(0,t.jsx)(n.p,{children:"La gestion d'erreurs se charge des d\xe9fauts de programme (cas anormaux) se\nproduisant au cours de l'ex\xe9cution. Son objectif n'est pas simplement d'afficher\nun message pour informer d'un probl\xe8me. Elle doit permettre aux parties du\nprogramme contenues dans la pile d'appel d'effectuer un traitement. Pour une\ngestion d'erreurs, il est n\xe9cessaire d'avoir"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Une d\xe9tection d'erreur, si condition alors il y a erreur de cat\xe9gorie X. Cette\nportion de code d\xe9tecte une condition d'erreur mais ne la traite pas. Son\nobjectif est de signaler l'erreur au reste du code de l'application. Elle est\nsignal\xe9e \xe0 travers une donn\xe9e particuli\xe8re correspondant \xe0 la cat\xe9gorie de\nl'erreur."}),"\n",(0,t.jsx)(n.li,{children:"Un gestionnaire d'erreur, si erreur de cat\xe9gorie X alors voici le traitement \xe0\nfaire. Un gestionnaire d'erreur d\xe9finit un code de traitement pour une\ncat\xe9gorie particulier d'erreur. Pour traiter cette erreur, les gestionnaire\ndoit recevoir la donn\xe9e d\xe9finie dans le code de d\xe9tection. Une partie de\nprogramme peut d\xe9finir plusieurs gestionnaires pour des cat\xe9gories diff\xe9rentes\nd'erreur. Pour une cat\xe9gorie d'erreur, plusieurs gestionnaires peuvent \xeatre\nd\xe9finis dans la pile d'appel."}),"\n",(0,t.jsx)(n.li,{children:"Un m\xe9canisme de transmission de l'erreur, si indication d'erreur X alors\ntransmettre l'ex\xe9cution au gestionnaire d'erreur X. Le cours normal de\nl'ex\xe9cution doit s'arr\xeater et continuer avec le code d'un gestionnaire de\ncette erreur. Ce gestionnaire est trouv\xe9 en remontant la pile d'appel."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"le-m\xe9canisme-de-transmission-de-lerreur",children:"Le m\xe9canisme de transmission de l'erreur"}),"\n",(0,t.jsx)(n.p,{children:"Un moyen d'effectuer cette transmission entre la d\xe9tection et le gestionnaire\nest d'utiliser la valeur de retour des fonctions. Mais cette transmission n'est\npas automatique, elle doit \xeatre \xe9crite par le programmeur pour chaque appel\nd'une fonction afin de remonter la pile d'appel. Pour avoir une transmission\nautomatique, le m\xe9canisme de gestion d'erreur doit enregistrer pour chaque\ngestionnaire d'erreur se trouvant dans la pile d'appel : la cat\xe9gorie d'erreur\net l'adresse de d\xe9but du code \xe0 ex\xe9cuter. D\xe9s qu'une erreur est signal\xe9e, la\ntransmission se fait par un saut (\"goto\") \xe0 l'adresse du d\xe9but du bloc du\ndernier gestionnaire enregistr\xe9 pour cette cat\xe9gorie d'erreur."}),"\n",(0,t.jsx)(n.h3,{id:"le-m\xe9canisme-dexception-du-langage-java",children:"Le m\xe9canisme d'exception du langage Java"}),"\n",(0,t.jsx)(n.p,{children:"Il est bas\xe9 sur :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Une exception est un objet encapsulant des informations sur l'erreur. Chaque\ncat\xe9gorie d'erreur est repr\xe9sent\xe9e par une classe (donc un type)"}),"\n",(0,t.jsx)(n.li,{children:"La lev\xe9e d'une exception provoque la rupture de s\xe9quence et transmet\nl'instance d'une classe d'exception. Le choix du gestionnaire se fait en\nfonction du type de la classe d'exception."}),"\n",(0,t.jsx)(n.li,{children:"La capture d'une exception d\xe9clare le gestionnaire : le type de la classe\nd'exception pris en compte et le bloc de traitement. Ce bloc r\xe9cup\xe8re\nl'instance tranmise par la lev\xe9e."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"les-classes-dexception",children:"Les classes d'exception"}),"\n",(0,t.jsxs)(n.p,{children:['Une classe est consid\xe9r\xe9e comme une classe d\'exception si elle poss\xe8de un lien\n"est-un" avec la classe ',(0,t.jsx)(n.code,{children:"java.lang.Throwable"}),". Cette classe d\xe9finit un\ncomportement par d\xe9faut :"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"son constructeur prend en param\xe8tre une cha\xeene de caract\xe8res utilis\xe9e comme\nmessage d'erreur;"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"getMessage()"})," : message d'erreur fourni lors de l'instanciation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"printStackTrace()"})," : affichage des informations sur la pile d'appel."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"L'API Java fournit d\xe9j\xe0 une hi\xe9rarchie de classes d'exception. Chacune de ces\nclasses correspond \xe0 une cat\xe9gorie d'erreur"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"java.lang.Throwable\n    Java.lang.Error\n        java.lang.AssertionError\n        java.lang.VirtualMachineError\n    Java.lang.Exception\n        java.lang.ClassNotFoundException\n        java.io.IOException\n            java.io.FileNotFoundException\n        java.lang.RuntimeException\n            java.lang.NullPointerException\n            java.lang.ArrayIndexOfBoundsException\n"})}),"\n",(0,t.jsx)(n.h2,{id:"la-lev\xe9e-dune-exception",children:"La lev\xe9e d'une exception"}),"\n",(0,t.jsxs)(n.p,{children:["Le bloc de d\xe9tection l\xe8ve une exception gr\xe2ce \xe0 l'instruction ",(0,t.jsx)(n.code,{children:"throw"})," suivie de\nl'instance d'une classe d'exception"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'if(conditionErreur)\n    throw new LaClasseException("Message_d\'erreur");\n'})}),"\n",(0,t.jsxs)(n.p,{children:["L'instruction ",(0,t.jsx)(n.code,{children:"throw"})," provoque la rupture de s\xe9quence, le saut vers un\ngestionnaire de cette erreur."]}),"\n",(0,t.jsx)(n.h2,{id:"la-capture-dune-exception",children:"La capture d'une exception"}),"\n",(0,t.jsxs)(n.p,{children:["La capture s'effectue \xe0 l'aide d'un bloc ",(0,t.jsx)(n.code,{children:"try/catch/finally"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"try{\n    // ...\n}\ncatch(Nom1Exception e){\n    // ...\n}\ncatch(Nom2Exception e){\n    //...\n}\ncatch(Nom3Exception |\xa0Nom4Exception e){\n    //...\n}\n[finally{}]\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"try"})," d\xe9limite les instructions o\xf9 s'appliquent la ou les captures suivantes."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"catch"})," d\xe9clare le gestionnaire d'une exception. Chaque clause ",(0,t.jsx)(n.code,{children:"catch"}),"\ncontient un seul param\xe8tre correspondant au type de l'exception \xe0 capture. \xc0\nl'ex\xe9cution, ce param\xe8tre va r\xe9f\xe9rencer l'instance pr\xe9cis\xe9e dans l'instruction\n",(0,t.jsx)(n.code,{children:"throw"}),". Toutes les clauses ",(0,t.jsx)(n.code,{children:"catch"})," d'un bloc ",(0,t.jsx)(n.code,{children:"try/catch/finally"})," doivent avoir\ndes types diff\xe9rents de param\xe8tre."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"finally"})," Cette clause est optionnelle. Si elle est pr\xe9sente, son bloc\nd'instructions est syst\xe9matiquement ex\xe9cut\xe9 apr\xe8s la fin du bloc try ou du bloc\nd'une clause ",(0,t.jsx)(n.code,{children:"catch"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Il y a toujours une seule clause ",(0,t.jsx)(n.code,{children:"try"})," et au moins une clause ",(0,t.jsx)(n.code,{children:"catch"}),". Si aucune\nexception n'est lev\xe9e dans les instructions des clauses ",(0,t.jsx)(n.code,{children:"try"})," ou ",(0,t.jsx)(n.code,{children:"catch"}),",\nl'ex\xe9cution continue normalement apr\xe8s le bloc ",(0,t.jsx)(n.code,{children:"try/catch/finally"}),". Par d\xe9faut,\nla machine virtuelle capture toutes les exceptions et affiche un message\nd'erreur."]}),"\n",(0,t.jsx)(n.h2,{id:"sp\xe9cification-de-la-propagation",children:"Sp\xe9cification de la propagation"}),"\n",(0,t.jsxs)(n.p,{children:["Une exception est dite propag\xe9e par un bloc de code si cette exception n'est pas\ncaptur\xe9e dans ce bloc. Cette propagation se fait en \"remontant\" la pile d'appel.\nEn Java, la clause ",(0,t.jsx)(n.code,{children:"throws"})," permet de sp\xe9cifier cette propagation dans la\nd\xe9claration d'une m\xe9thode ou d'un constructeur. Cette sp\xe9cification est\nobligatoire :"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["pour les sous-types de la classe ",(0,t.jsx)(n.code,{children:"java.lang.Exception"})]}),"\n",(0,t.jsxs)(n.li,{children:["mais non sous-types de la classe ",(0,t.jsx)(n.code,{children:"java.lang.RuntimeException"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Ces exceptions sont dites contr\xf4l\xe9es/v\xe9rifi\xe9es. Elle correspondent \xe0 la majorit\xe9\ndes exceptions d\xe9finies par l'API Java."}),"\n",(0,t.jsxs)(n.p,{children:["Pour une exception contr\xf4l\xe9e/v\xe9rifi\xe9e, le compilateur Java provoque une erreur\nsi le corps d'une m\xe9thode ou d'une constructeur propage (ne capture pas) cette\nexception sans d\xe9claration dans la clause ",(0,t.jsx)(n.code,{children:"throws"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var s=r(96540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
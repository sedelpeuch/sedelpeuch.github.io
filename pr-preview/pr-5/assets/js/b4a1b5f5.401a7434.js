"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[9254],{28118:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=s(85893),t=s(11151);const r={title:"Les signaux"},l=void 0,a={id:"enseirb/s7/prog_sys/10",title:"Les signaux",description:"Les signaux sont un m\xe9canisme asynchrone de communication inter-processus.",source:"@site/docs/enseirb/s7/prog_sys/10.md",sourceDirName:"enseirb/s7/prog_sys",slug:"/enseirb/s7/prog_sys/10",permalink:"/pr-preview/pr-5/docs/enseirb/s7/prog_sys/10",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Les signaux"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/pr-preview/pr-5/docs/enseirb/s7/prog_sys/1"},next:{title:"Les verous de fichiers",permalink:"/pr-preview/pr-5/docs/enseirb/s7/prog_sys/11"}},o={},d=[{value:"Provenance des signaux",id:"provenance-des-signaux",level:3},{value:"Gestion interne des signaux",id:"gestion-interne-des-signaux",level:3},{value:"L&#39;envoi de signaux : la primitive kill",id:"lenvoi-de-signaux--la-primitive-kill",level:3},{value:"La gestion simplifi\xe9e avec la fonction <code>signal</code>",id:"la-gestion-simplifi\xe9e-avec-la-fonction-signal",level:2},{value:"Probl\xe8mes de la gestion de signaux ATT",id:"probl\xe8mes-de-la-gestion-de-signaux-att",level:3},{value:"La norme POSIX",id:"la-norme-posix",level:2},{value:"Le blocage des signaux",id:"le-blocage-des-signaux",level:3},{value:"<code>sigaction</code>",id:"sigaction",level:3},{value:"L&#39;attente d&#39;un signal",id:"lattente-dun-signal",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Les signaux sont un m\xe9canisme asynchrone de communication inter-processus.\nIntuitivement, ils sont comparables \xe0 des sonneries, les diff\xe9rentes sonneries\nindiquant des \xe9v\xe8nements diff\xe9rents. Les signaux sont envoy\xe9s \xe0 un ou plusieurs\nprocessus. Ce signal est en g\xe9n\xe9ral associ\xe9 \xe0 un \xe9v\xe8nement. Peu portables entre\nBSD et ATT, ils deviennent plus commodes \xe0 utiliser et portables avec la norme\nPOSIX qui utilise la notion utile de vecteur de signaux et qui fournit un\nm\xe9canisme de masquage automatique pendant les proc\xe9dures de traitement (comme\nBSD). Un signal est envoy\xe9 \xe0 un processus en utilisant l'appel syst\xe8me"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"kill(int pid, int signal);\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"signal"})," est un num\xe9ro compris entre 1 et ",(0,i.jsx)(n.code,{children:"NSIG"})," (d\xe9fini dans ",(0,i.jsx)(n.code,{children:"<signal.h>"}),") et\n",(0,i.jsx)(n.code,{children:"pid"})," est le num\xe9ro du processus. Le processus vis\xe9 re\xe7oit le signal sous forme\nd'un drapeau positionn\xe9 dans son bloc de contr\xf4le. Le processus est interrompu\net r\xe9alise \xe9ventuellement un traitement de ce signal. On peut consid\xe9rer les\nsignaux comme des interruptions logicielles, ils interrompent le flot normal\nd'un processus mais ne sont pas trait\xe9s de fa\xe7on synchrone comme les\ninterruptions mat\xe9rielles."]}),"\n",(0,i.jsx)(n.h3,{id:"provenance-des-signaux",children:"Provenance des signaux"}),"\n",(0,i.jsxs)(n.p,{children:["Certains signaux peuvent \xeatre lanc\xe9s \xe0 partir d'un terminal gr\xe2ce aux caract\xe8res\nsp\xe9ciaux comme ",(0,i.jsx)(n.code,{children:"intr, quit"})," dont la frappe est transform\xe9e en l'envoi des\nsignaux ",(0,i.jsx)(n.code,{children:"SIGINT"})," et ",(0,i.jsx)(n.code,{children:"SIGQUIT"}),". D'autres sont d\xfbes \xe0 des causes internes au\nprocessus, par exemple : ",(0,i.jsx)(n.code,{children:"SIGEGV"})," qui est envoy\xe9 en cas d'erreur d'adressage,\n",(0,i.jsx)(n.code,{children:"SIGFPE"})," division par z\xe9ro (Floating Point Exception). Enfin certains sont d\xfbes\n\xe0 des \xe9v\xe8nements comme la d\xe9connexion de la ligne (le terminal) utilis\xe9 : si le\nprocessus leader d'un groupe de processus est d\xe9connect\xe9, il envoie \xe0 l'ensemble\ndes processus de son groupe le signal ",(0,i.jsx)(n.code,{children:"SIGHUP"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"gestion-interne-des-signaux",children:"Gestion interne des signaux"}),"\n",(0,i.jsxs)(n.p,{children:["C'est dans le bloc de contr\xf4le (BCP) de chaque processus que l'on trouve la\ntable de gestion des signaux. Cette table contient pour chaque signal d\xe9fini sur\nla machine, une structure ",(0,i.jsx)(n.code,{children:"sigvec"})," suivante :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"{\nbit pendant;\nvoid(*traitement)(int);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["en BSD et POSIX, on a un champ suppl\xe9mentaire : ",(0,i.jsx)(n.code,{children:"bit masque;"})," Le drapeau\n",(0,i.jsx)(n.code,{children:"pendant"})," indique que le processus a re\xe7u un signal, mais n'a pas encore eu\nl'occasion de prendre en compte ce signal."]}),"\n",(0,i.jsx)(n.h3,{id:"lenvoi-de-signaux--la-primitive-kill",children:"L'envoi de signaux : la primitive kill"}),"\n",(0,i.jsxs)(n.p,{children:["Il y a NSIG signaux sur une machine, d\xe9clar\xe9s dans le fichier\n",(0,i.jsx)(n.code,{children:"/usr/include/signal.h"}),". La valeur de ",(0,i.jsx)(n.code,{children:"pid"})," indique le ",(0,i.jsx)(n.code,{children:"PID"})," du processus auquel\nle signal est envoy\xe9. Le param\xe8tre ",(0,i.jsx)(n.code,{children:"sig"})," est interpr\xe9t\xe9 comme un signal si ",(0,i.jsx)(n.code,{children:"sig"}),"\nest entre 0 et ",(0,i.jsx)(n.code,{children:"NSIG"}),", ou comme une demande d'information si ",(0,i.jsx)(n.code,{children:"sig=0"}),". Comme un\nparam\xe8tre erron\xe9 sinon. La fonction ",(0,i.jsx)(n.code,{children:"raise(int signal)"})," est un raccourci pour\n",(0,i.jsx)(n.code,{children:"kill(getpid(),signal)"}),", le processus s'envoie \xe0 lui-m\xeame un signal."]}),"\n",(0,i.jsxs)(n.h2,{id:"la-gestion-simplifi\xe9e-avec-la-fonction-signal",children:["La gestion simplifi\xe9e avec la fonction ",(0,i.jsx)(n.code,{children:"signal"})]}),"\n",(0,i.jsxs)(n.p,{children:["La fonction ",(0,i.jsx)(n.code,{children:"signal"})," permet de sp\xe9cifier ou de conna\xeetre le comportement du\nprocessus \xe0 la r\xe9ception d'un signal donn\xe9, il faut donner en param\xe8tre \xe0 la\nfonction la num\xe9ro du signal ",(0,i.jsx)(n.code,{children:"sig"})," que l'on veut d\xe9tourner et la fonction de\ntraitement action \xe0 r\xe9aliser \xe0 la r\xe9ception du signal."]}),"\n",(0,i.jsx)(n.h3,{id:"probl\xe8mes-de-la-gestion-de-signaux-att",children:"Probl\xe8mes de la gestion de signaux ATT"}),"\n",(0,i.jsx)(n.p,{children:"Les ph\xe9nom\xe8nes suivants sont d\xe9crits comme des probl\xe8mes mais la norme POSIX\npermet d'en conserver certains, mais fournit aussi les moyens de les \xe9viter."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Un signal est reposition \xe0 sa valeur par d\xe9faut au d\xe9but de son traitement"}),"\n",(0,i.jsx)(n.li,{children:"Certains appels syst\xe8mes peuvent \xeatre interrompus et dans ce cas la valeur de\nretour de l'appel syst\xe8me est -1. Il faudrait, pour r\xe9aliser correctement ,e\nmod\xe8le d'une interruption logicielle, relancer l'appel syst\xe8me en fin de\ntraitement du signal."}),"\n",(0,i.jsx)(n.li,{children:"Si un signal est ignor\xe9 par un processus endormi, celui-ci sera r\xe9veill\xe9 par\nle syst\xe8me uniquement pour apprendre qu'il ignore le signal et doit donc \xeatre\nendormi de nouveau."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"la-norme-posix",children:"La norme POSIX"}),"\n",(0,i.jsx)(n.p,{children:"La norme POSIX ne d\xe9finit pas le comportement d'interruption des appels\nsyst\xe8mes, il faut le sp\xe9cifier dans la structure de traitement du signal."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Les ensembles de signaux"})," La norme POSIX introduit les ensembles de signaux :\nces ensembles de signaux permettent de d\xe9passer la contrainte classique qui veut\nque le nombre de signaux soit inf\xe9rieur ou \xe9gal au nombre de bits des entiers de\nla machine. D'autre part, des fonctions de manipulation de ces ensembles sont\nfournies et permettent de d\xe9finir simplement des masques. Ces ensembles de\nsignaux sont du type ",(0,i.jsx)(n.code,{children:"sigset_t"})," et sont manipulantes gr\xe2ce aux fonctions\nsuivantes."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int sigemptyset(sigset_t *ens) //raz\nint sigfillset(sigset_t *ens) // ens = {1,2, ..., NSIG}\nint sigaddset(sigset_t *ens, int sig) // ens = ens + {sig}\nint sigdelset(sigset_t *ens, int sig) // ens = ens - {sig}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Ces fonctions retournent -1 en cas d'\xe9chec et 0 sinon."}),"\n",(0,i.jsx)(n.h3,{id:"le-blocage-des-signaux",children:"Le blocage des signaux"}),"\n",(0,i.jsx)(n.p,{children:"La fonction suivante permet de manipuler le masque des signaux du processus"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"#include <signal.h>\nint sigprocmask(int op, const sigset_t *nouv, sigset_t *anc);\n"})}),"\n",(0,i.jsx)(n.p,{children:"L'op\xe9ration op :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SIG_SETMASK"})," affectation du nouveau masque, r\xe9cup\xe9ration de la valeur de\nl'ancien masque"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SIG_BLOCK"})," union de deux ensembles ",(0,i.jsx)(n.code,{children:"nouv"})," et ",(0,i.jsx)(n.code,{children:"anc"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SIG_UNBLOCK"})," soustraction ",(0,i.jsx)(n.code,{children:"anc-nouv"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["On peut savoir si un signal est ",(0,i.jsx)(n.code,{children:"pendant"})," et donc ",(0,i.jsx)(n.code,{children:"bloqu\xe9"})," gr\xe2ce \xe0 la fonction\n",(0,i.jsx)(n.code,{children:"int sigpending(sigset_t *ens);"})," qui retourne -1 en cas d'\xe9chec et 0 sinon et\nl'ensemble des signaux pendants est stock\xe9 \xe0 l'adresse ",(0,i.jsx)(n.code,{children:"ens"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"sigaction",children:(0,i.jsx)(n.code,{children:"sigaction"})}),"\n",(0,i.jsxs)(n.p,{children:["La structure ",(0,i.jsx)(n.code,{children:"sigaction"})," d\xe9crit le comportement utilis\xe9 pour le traitement d'un\nsignal"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"struct sigaction{\n    void (*sa_handler)();\n    sigset_t sa_mask;\n    int sa_flags;\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sa_handler"})," fonction de traitement"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sa_mask"})," ensemble de signaux suppl\xe9mentaires \xe0 bloquer pendant le traitement"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sa_flags"})," diff\xe9rentes options"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Le position du comportement de r\xe9ception d'un signal se fait par la primitive\n",(0,i.jsx)(n.code,{children:"sigaction"}),". L'installation d'une fonction de traitement du signal ",(0,i.jsx)(n.code,{children:"SIGCHLD"}),"\npeut avoir pour effet d'envoyer un signal au processus, ceci dans le cas o\xf9 le\nprocessus a des fils zombie, c'est toujours le probl\xe8me li\xe9 \xe0 ce signal qui n'a\npas le m\xeame comportement que les autres signaux. Un handler positionn\xe9 par\n",(0,i.jsx)(n.code,{children:"sigaction"})," reste jusqu'\xe0 ce qu'un autre handler soit positionn\xe9, \xe0 la\ndiff\xe9rence des versions ATT o\xf9 le handler par d\xe9faut est repositionn\xe9\nautomatiquement au d\xe9but du traitement du signal."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"#include <signal.h>\nint sigaction(int sig,\n              const struct sigaction *paction,\n              struct sigaction *paction_precedente);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Cette fonction r\xe9alise soit une demande d'information. Si le pointeur ",(0,i.jsx)(n.code,{children:"paction"}),"\nest null, on obtient la structure ",(0,i.jsx)(n.code,{children:"sigaction"})," courante. Sinon c'est une demande\nde modification du comportement."]}),"\n",(0,i.jsx)(n.h3,{id:"lattente-dun-signal",children:"L'attente d'un signal"}),"\n",(0,i.jsxs)(n.p,{children:["En plus de l'appel ",(0,i.jsx)(n.code,{children:"pause"}),", on trouve sous POSIX l'appel ",(0,i.jsx)(n.code,{children:"int sigsuspend(const sigset_t * ens);"})," qui permet de r\xe9aliser de fa\xe7ons ",(0,i.jsx)(n.code,{children:"atomique"})," les actions\nsuivantes :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["l'installation du masque de blocage d\xe9fini par ",(0,i.jsx)(n.code,{children:"ens"})]}),"\n",(0,i.jsx)(n.li,{children:"mise en attente de la r\xe9ception d'un signal non bloqu\xe9."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>l});var i=s(67294);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
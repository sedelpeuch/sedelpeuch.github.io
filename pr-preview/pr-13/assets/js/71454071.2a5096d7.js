"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[3682],{80366:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var t=s(74848),i=s(28453);const a={title:"Objet et encapsulation - Encapsulation"},o=void 0,r={id:"enseirb/s7/poo/1",title:"Objet et encapsulation - Encapsulation",description:"D\xe9finition : L'encapsulation dans l'approche objet consiste \xe0 regrouper le code (donn\xe9es et",source:"@site/docs/enseirb/s7/poo/1.md",sourceDirName:"enseirb/s7/poo",slug:"/enseirb/s7/poo/1",permalink:"/pr-preview/pr-13/docs/enseirb/s7/poo/1",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Objet et encapsulation - Encapsulation"},sidebar:"tutorialSidebar",previous:{title:"Programmation Orient\xe9e Objets",permalink:"/pr-preview/pr-13/docs/enseirb/s7/poo/"},next:{title:"Objet et encapsulation - Les objets",permalink:"/pr-preview/pr-13/docs/enseirb/s7/poo/2"}},l={},c=[{value:"Objet",id:"objet",level:2},{value:"Classe",id:"classe",level:2},{value:"Description des encapsulations en Java",id:"description-des-encapsulations-en-java",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"D\xe9finition"})," : L'",(0,t.jsx)(n.strong,{children:"encapsulation"})," dans l'approche objet consiste \xe0 regrouper le code (donn\xe9es et\ntraitements) qui fournit un m\xeame service dans une seule entit\xe9. Une\nencapsulation sp\xe9cifie le fonctionnement d'un service (par un ensemble\nd'actions) en masquant la mani\xe8re de le r\xe9aliser.\nRespecter le concept d'encapsulation permet de s\xe9parer l'utilisation d'un\nservice de sa r\xe9alisation et renforcer la manipulation d'abstractions dans la\nfabrication d'un logiciel."]}),"\n",(0,t.jsx)(n.p,{children:"Respecter le concept d'encapsulation permet de s\xe9parer l'utillisation d'un\nservice de sa r\xe9alisation et renforcer la manipulation d'abstractions dans la\nfabrication d'un logiciel"}),"\n",(0,t.jsx)(n.h2,{id:"objet",children:"Objet"}),"\n",(0,t.jsxs)(n.p,{children:["L'",(0,t.jsx)(n.code,{children:"objet"})," est l'entit\xe9 qui met en oeuvre, \xe0 l'ex\xe9cution, une encapsulation.\nPlusieurs objets peuvent mettre en oeuvre la m\xeame encapsulation.\nLes donn\xe9es encapsul\xe9es dans unobjet sont d\xe9sign\xe9es par les termes ",(0,t.jsx)(n.strong,{children:"attributs"}),"\nou ",(0,t.jsx)(n.strong,{children:"variable d'instances"}),".\nLes traitements encapsul\xe9s dans un objet sont d\xe9sign\xe9es par le terme\n",(0,t.jsx)(n.strong,{children:"m\xe9thodes"}),"\nDans cette approche, l'ex\xe9cution d'un programme manipule uniquement des objets :\ncr\xe9ation, passage de param\xe8tres et communication entre objets. Un objet A\ncommunique avec un objet B lorsqu'un des traitements de l'objet A\nd\xe9clenche une des m\xe9thodes de l'objet B ."]}),"\n",(0,t.jsx)(n.h2,{id:"classe",children:"Classe"}),"\n",(0,t.jsxs)(n.p,{children:["Un langage orient\xe9 objet doit fournir un moyen de d\xe9crire une encapsulation\n(utilisation et r\xe9alisation). En g\xe9n\xe9ral, cette description d'une encapsulation\nest faite \xe0 l'aide de la construction appel\xe9e ",(0,t.jsx)(n.strong,{children:"classe"}),".\nDans un langage type, une classe correspond \xe0 la d\xe9claration d'un type."]}),"\n",(0,t.jsx)(n.h2,{id:"description-des-encapsulations-en-java",children:"Description des encapsulations en Java"}),"\n",(0,t.jsx)(n.p,{children:"Le langage Java est un langage orient\xe9 objet typ\xe9 utilisant des classes pour la\ndescription des encapsulations."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["D\xe9finition de la classe Java ",(0,t.jsx)(n.code,{children:"PorteCharniere"})," dans un fichier source nomm\xe9 :\n",(0,t.jsx)(n.code,{children:"PorteCharniere.java"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class PorteCharniere {\n    // La d\xe9finition des variables / attributs d'un objet\n    boolean estFerme;\n\n    //La d\xe9finition des m\xe9thodes d'un objet\n    void fermer(){\n        /* Todo */\n        estFerme=true;\n    }\n\n    void ouvrir(){\n        /*Todo*/\n        estFerme=false;\n    }\n\n    boolean estFerme(){\n        return estFerme;\n    }\n    }\n"})}),"\n",(0,t.jsxs)(n.p,{children:["En Java, la d\xe9finition d'une classe correspond \xe0 la d\xe9claration d'un type. Nous\npouvons d\xe9clarer une variable ",(0,t.jsx)(n.code,{children:"maPorte"})," du type ",(0,t.jsx)(n.code,{children:"ProteCharniere"})," qui peut\ncontenir \xe0 l'ex\xe9cution, un objet de la classe ",(0,t.jsx)(n.code,{children:"PorteCharniere"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["D\xe9finition de la classe ",(0,t.jsx)(n.code,{children:"Telecommande"})," dans le fichier source\n",(0,t.jsx)(n.code,{children:"Telecommande.java"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"class Telecommande{\n    void positionner(PorteCharniere p){\n\n    }\n    void activer(int numero){\n\n    }\n    void desactiver(int numero){\n\n    }\n    void desactiverTout(){\n\n    }\n    int nbPortes;\n    PorteCharniere[] mesPortes;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Cette description (attributs, m\xe9thodes va \xeatre applicable aux objets cr\xe9\xe9s \xe0\npartir de la classe ",(0,t.jsx)(n.code,{children:"Telecommande"}),")."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
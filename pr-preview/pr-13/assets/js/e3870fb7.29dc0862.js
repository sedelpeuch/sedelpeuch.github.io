"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[371],{9181:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>a});var t=r(74848),n=r(28453);const i={title:"Docker Compose",description:"Explication de Docker Compose",tags:["Docker","Docker Compose","Devops","Containerization"]},p=void 0,s={permalink:"/pr-preview/pr-13/blog/2024/04/07/03-containerization/docker-compose",source:"@site/blog/03-containerization/2024-04-07-docker-compose.md",title:"Docker Compose",description:"Explication de Docker Compose",date:"2024-04-07T00:00:00.000Z",tags:[{inline:!0,label:"Docker",permalink:"/pr-preview/pr-13/blog/tags/docker"},{inline:!0,label:"Docker Compose",permalink:"/pr-preview/pr-13/blog/tags/docker-compose"},{inline:!0,label:"Devops",permalink:"/pr-preview/pr-13/blog/tags/devops"},{inline:!0,label:"Containerization",permalink:"/pr-preview/pr-13/blog/tags/containerization"}],readingTime:9.87,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Docker Compose",description:"Explication de Docker Compose",tags:["Docker","Docker Compose","Devops","Containerization"]},unlisted:!1,prevItem:{title:"FastAPI",permalink:"/pr-preview/pr-13/blog/2024/08/26/09-scripting/fastapi"},nextItem:{title:"Diff\xe9rence entre un proxy et un reverse proxy",permalink:"/pr-preview/pr-13/blog/2024/03/31/02-network/proxy-vs-reverse-proxy"}},c={authorsImageUrls:[]},a=[];function l(e){const o={p:"p",...(0,n.R)(),...e.components};return(0,t.jsx)(o.p,{children:"Docker Compose est un outil puissant qui permet de d\xe9finir et de g\xe9rer des applications multi-conteneurs Docker. Il utilise un fichier YAML pour configurer les services de l'application. Ensuite, avec une seule commande, vous pouvez cr\xe9er et d\xe9marrer tous les services \xe0 partir de votre configuration."})}function u(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,o,r)=>{r.d(o,{R:()=>p,x:()=>s});var t=r(96540);const n={},i=t.createContext(n);function p(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:p(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);
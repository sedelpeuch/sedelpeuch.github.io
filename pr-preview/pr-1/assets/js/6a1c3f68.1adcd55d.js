"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[4696],{34422:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=t(85893),r=t(11151);const i={title:"Interruptions et ordonnancement"},o=void 0,c={id:"enseirb/s9/SE/3",title:"Interruptions et ordonnancement",description:"Probl\xe8me",source:"@site/docs/enseirb/s9/SE/3.md",sourceDirName:"enseirb/s9/SE",slug:"/enseirb/s9/SE/3",permalink:"/pr-preview/pr-1/docs/enseirb/s9/SE/3",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Interruptions et ordonnancement"},sidebar:"tutorialSidebar",previous:{title:"Bus de communication",permalink:"/pr-preview/pr-1/docs/enseirb/s9/SE/2"},next:{title:"Contr\xf4le commande",permalink:"/pr-preview/pr-1/docs/enseirb/s9/controle"}},l={},d=[{value:"Probl\xe8me",id:"probl\xe8me",level:2},{value:"Ordonnancement",id:"ordonnancement",level:2},{value:"Comment r\xe9aliser diff\xe9rents t\xe2ches simultan\xe9ments",id:"comment-r\xe9aliser-diff\xe9rents-t\xe2ches-simultan\xe9ments",level:3},{value:"Polling et interuptions",id:"polling-et-interuptions",level:2},{value:"Ring buffer",id:"ring-buffer",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"probl\xe8me",children:"Probl\xe8me"}),"\n",(0,s.jsx)(n.p,{children:"Consid\xe9rons le code suivant"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"void uart_send(char *str) {\n    while (*str != '\\0') {\n        // Waits to be ready to send next byte\n        while (UCSR0A & _BV(UDRE0));\n        // Sends the next byte\n        UDRE0 = *(str++);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Ce code fonctionne correctement mais il consomme beaucoup de ressources."}),"\n",(0,s.jsx)(n.h2,{id:"ordonnancement",children:"Ordonnancement"}),"\n",(0,s.jsx)(n.h3,{id:"comment-r\xe9aliser-diff\xe9rents-t\xe2ches-simultan\xe9ments",children:"Comment r\xe9aliser diff\xe9rents t\xe2ches simultan\xe9ments"}),"\n",(0,s.jsx)(n.p,{children:"Le probl\xe8me peut \xeatre r\xe9solu en utilisant un ordonnanceur, c'est-\xe0-dire un syst\xe8me qui permet de d\xe9finir l'ordre d'ex\xe9cution des t\xe2ches. Cependant il est aussi possible de r\xe9aliser des t\xe2ches simultan\xe9ment en utilisant de l'ordonnancement coop\xe9ratif."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"int main() {\n    setup();\n\n    while (1) {\n        usart_tick();\n        leds_tick();\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Ici ",(0,s.jsx)(n.code,{children:"usart_tick()"})," et ",(0,s.jsx)(n.code,{children:"leds_tick()"})," sont des m\xe9thodes coop\xe9ratives, elles effectueront des calculs et rendront l'ex\xe9cution en retournant rapidement les donn\xe9es. Voici une fa\xe7on d'organiser le code pr\xe9c\xe9dent en utilisant l'ordonnancement."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"static char buffer[128];\nstatic size_t position = 0;\nstatic size_t length = 0;\n\nvoid uart_send(char *str) {\n    position = 0;\n    length = strlen(str);\n    memcpy(buffer, str, length);\n}\n\nvoid uart_tick() {\n    if (position < length) {\n        if (UCSR0A & _BV(UDRE0)) {\n            UDRE0 = buffer[position];\n            position += 1;\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"polling-et-interuptions",children:"Polling et interuptions"}),"\n",(0,s.jsxs)(n.p,{children:["Dans le premier exemple, nous attendions activement que le buffer soit disponible avec une boucle, c'est ce que nous appelons ",(0,s.jsx)(n.code,{children:"polling"})]}),"\n",(0,s.jsx)(n.p,{children:"Ensuite, nous avons introduit le concept simple de l'ordonnancement manuel, mais le microcontr\xf4leur passera toujours beaucoup de temps \xe0 ex\xe9cuter des tests qui sont pour la plupart faux."}),"\n",(0,s.jsx)(n.p,{children:"Une caract\xe9ristique des microcontr\xf4leurs peut nous aider ici : les interruptions. Il s'agit simplement de routines ex\xe9cut\xe9es lorsqu'un \xe9v\xe9nement quelconque se produit. Il suffit alors au processeur de \"sauter\" automatiquement \xe0 une m\xe9thode donn\xe9e."}),"\n",(0,s.jsx)(n.p,{children:"Le code binaire que nous t\xe9l\xe9chargeons commence par une table de vecteurs d'interruption. Chaque entr\xe9e de cette table correspond \xe0 un type d'interruption et donne une adresse cible pour la routine \xe0 ex\xe9cuter."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(45901).Z+"",width:"927",height:"762"})}),"\n",(0,s.jsx)(n.h2,{id:"ring-buffer",children:"Ring buffer"}),"\n",(0,s.jsx)(n.p,{children:"Pour g\xe9rer l'envoi et la r\xe9ception de donn\xe9es \xe0 l'aide d'un bus comme l'UART, nous pouvons utiliser un buffer en anneau, permettant de stocker les donn\xe9es qui ne sont pas encore trait\xe9es."}),"\n",(0,s.jsx)(n.p,{children:"Il peut s'agir soit de donn\xe9es TX qui n'ont pas encore \xe9t\xe9 envoy\xe9es, soit de donn\xe9es RX qui n'ont pas \xe9t\xe9 lues par le code."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(95058).Z+"",width:"826",height:"642"})}),"\n",(0,s.jsx)(n.p,{children:"Le principe est de stocker un tableau en m\xe9moire avec deux index, le premier \xe9tant le prochain \xe9l\xe9ment \xe0 lire, et le second le prochain \xe9l\xe9ment \xe0 \xe9crire."}),"\n",(0,s.jsx)(n.p,{children:"Lorsque les index sont incr\xe9ment\xe9s, ils d\xe9bordent sur la longueur du buffer (en revenant au d\xe9but lorsqu'ils atteignent la fin)."}),"\n",(0,s.jsx)(n.p,{children:"Nous pouvons v\xe9rifier s'il y a des donn\xe9es \xe0 lire en comparant les index."})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},45901:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/6-3aa589468ccd14cd8f49dece274c1138.png"},95058:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/7-5d6c172b895b5a956929a75e7d51a9a3.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var s=t(67294);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
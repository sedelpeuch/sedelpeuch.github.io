"use strict";(self.webpackChunksedelpeuch_net=self.webpackChunksedelpeuch_net||[]).push([[5823],{84190:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=s(85893),a=s(11151);const l={title:"Types et constructions de base du langage"},t=void 0,o={id:"enseirb/s6/fonc/notes3",title:"Types et constructions de base du langage",description:"D\xe9finitions : Symboles et liaisons",source:"@site/docs/enseirb/s6/fonc/notes3.md",sourceDirName:"enseirb/s6/fonc",slug:"/enseirb/s6/fonc/notes3",permalink:"/pr-preview/pr-1/docs/enseirb/s6/fonc/notes3",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Types et constructions de base du langage"},sidebar:"tutorialSidebar",previous:{title:"Types et constructions de base du langage",permalink:"/pr-preview/pr-1/docs/enseirb/s6/fonc/notes2"},next:{title:"R\xe9cursivit\xe9",permalink:"/pr-preview/pr-1/docs/enseirb/s6/fonc/notes4"}},r={},c=[{value:"D\xe9finitions : Symboles et liaisons",id:"d\xe9finitions--symboles-et-liaisons",level:3},{value:'<i class="fas fa-code-branch"></i> Environnements global et locaux',id:"-environnements-global-et-locaux",level:2},{value:"Environnements locaux - La forme <code>let</code>",id:"environnements-locaux---la-forme-let",level:3},{value:'<i class="fas fa-code-branch"></i> Strat\xe9gies de recherche d&#39;une liaison',id:"-strat\xe9gies-de-recherche-dune-liaison",level:2},{value:"Strat\xe9gie lexicale - Lexical scope",id:"strat\xe9gie-lexicale---lexical-scope",level:3},{value:"Strat\xe9gie dynamique - Dynamic scope",id:"strat\xe9gie-dynamique---dynamic-scope",level:3},{value:'<i class="fas fa-code-branch"></i> Port\xe9e et dur\xe9e de vie en Scheme',id:"-port\xe9e-et-dur\xe9e-de-vie-en-scheme",level:2},{value:'<i class="fas fa-code-branch"></i> Paradigme fonctionnel et environnements',id:"-paradigme-fonctionnel-et-environnements",level:2}];function d(e){const n={annotation:"annotation",code:"code",h2:"h2",h3:"h3",li:"li",math:"math",mi:"mi",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"d\xe9finitions--symboles-et-liaisons",children:"D\xe9finitions : Symboles et liaisons"}),"\n",(0,i.jsxs)(n.p,{children:["Un ",(0,i.jsx)(n.strong,{children:"symbole"})," est un identificateur, c'est \xe0 dire un nom symbolique."]}),"\n",(0,i.jsxs)(n.p,{children:["Une ",(0,i.jsx)(n.strong,{children:"liaison"})," est une entit\xe9, c'est \xe0 dire un objet nomm\xe9 r\xe9sidant dans la m\xe9moire, donc l'association d'un symbole avec un emplacement m\xe9moire contenant une valeur."]}),"\n",(0,i.jsxs)(n.p,{children:["Dans un programme un m\xeame symbole eut appara\xeetre dans plusieurs liaisons. De m\xeame, en ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsx)(n.mrow,{children:(0,i.jsx)(n.mi,{children:"C"})}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"C"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"C"})]})})]}),", un identificateur peut aussi servir \xe0 nommer plusieurs entit\xe9s. Plusieurs strat\xe9gies de recherche ont \xe9t\xe9 impl\xe9ment\xe9es dans les langages de programmation."]}),"\n",(0,i.jsxs)(n.h2,{id:"-environnements-global-et-locaux",children:[(0,i.jsx)("i",{class:"fas fa-code-branch"})," Environnements global et locaux"]}),"\n",(0,i.jsxs)(n.p,{children:["L'environnement est form\xe9 de liaisons ",(0,i.jsx)(n.code,{children:"symbole -> valeur"}),". Les symboles ne sont pas typ\xe9s mais leurs valeurs le sont. Il s'agit d'un typage dynamique."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Variables : ",(0,i.jsx)(n.code,{children:"(define <v> <e>)"})]}),"\n",(0,i.jsxs)(n.li,{children:["Fonctions : ",(0,i.jsx)(n.code,{children:"(define (<f> <p1> <p2> ... <pn>) <e1> <e2> ... <en>)"})]}),"\n",(0,i.jsx)(n.li,{children:"R\xe9sultat non sp\xe9cifi\xe9 par la norme"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Une d\xe9finition \xe9tablit une liaison entre une variable et un objet r\xe9sultant de l'\xe9valuation de l'expression, cet objet pouvant \xeatre une fonction"}),"\n",(0,i.jsxs)(n.h3,{id:"environnements-locaux---la-forme-let",children:["Environnements locaux - La forme ",(0,i.jsx)(n.code,{children:"let"})]}),"\n",(0,i.jsxs)(n.p,{children:["Ils sont fabirqu\xe9s avec les formes ",(0,i.jsx)(n.code,{children:"let"}),", ",(0,i.jsx)(n.code,{children:"let*"}),", ",(0,i.jsx)(n.code,{children:"letrec"})," et par des d\xe9finitions au moyen de la forme ",(0,i.jsx)(n.code,{children:"define"})," dans le corps des fonctions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(let (<l1>\n      <l2>\n      ...\n      <ln>)\n <e>)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Avec ",(0,i.jsx)(n.code,{children:"<li>"})," une liaison : ",(0,i.jsx)(n.code,{children:"(<si> <oi>)"}),", ",(0,i.jsx)(n.code,{children:"<si>"})," est une symbole, ",(0,i.jsx)(n.code,{children:"<oi>"})," une valeur d'initialisation, ",(0,i.jsx)(n.code,{children:"<e>"})," une expression."]}),"\n",(0,i.jsx)(n.p,{children:"L'\xe9valuation des vlauers d'initialisation est effectu\xe9e en premier puis les variables locales sont cr\xe9\xe9es. Ce qui implqiue que les valeurs des variables locales d\xe9finies dans un let ne sont pas utilis\xe9es dans l'\xe9valuation des expressions d'initialisation."}),"\n",(0,i.jsxs)(n.h2,{id:"-strat\xe9gies-de-recherche-dune-liaison",children:[(0,i.jsx)("i",{class:"fas fa-code-branch"})," Strat\xe9gies de recherche d'une liaison"]}),"\n",(0,i.jsx)(n.p,{children:"Pour chercher la liaison correspondant \xe0 l'occurence d'un symbole dans une expression, la recherche commence par l'environnement dans lequel appara\xeet l'expression. Si l'occurence appara\xeet dans le corps d'une fonction et qu'aucune liaison ne correspond en local (cas d'une variable libre), deux strat\xe9gies existent"}),"\n",(0,i.jsx)(n.h3,{id:"strat\xe9gie-lexicale---lexical-scope",children:"Strat\xe9gie lexicale - Lexical scope"}),"\n",(0,i.jsx)(n.p,{children:"La strat\xe9gie lexical consiste \xe0 remonter les environnements locaux englobants du plus proche jusqu'\xe0 l'environnement global. La premi\xe8re liaison dont le nom de symbole correspond est retenue. Cette strat\xe9gie s'applique aussi \xe0 l'\xe9valuation du corps d'une fonction lors d'une application. En effet celui-ci est \xe9valu\xe9 dans l'environnement englobant de la fonction, dit environnement lexical."}),"\n",(0,i.jsx)(n.p,{children:"Cette strat\xe9gie correspond au langage C et aux langages imp\xe9ratifs en g\xe9n\xe9ral et au langage Scheme."}),"\n",(0,i.jsx)(n.h3,{id:"strat\xe9gie-dynamique---dynamic-scope",children:"Strat\xe9gie dynamique - Dynamic scope"}),"\n",(0,i.jsx)(n.p,{children:"Pour chercher la liaison correspondant \xe0 l'occurence d'un symbole dans une expression situ\xe9e dans le corps d'une fonction, la strat\xe9gie dynamique consiste \xe0 rechercher sa liaison dans l'environnement dynamique, c'est \xe0 dire l'environnement d'application de la fonction"}),"\n",(0,i.jsx)(n.p,{children:"Cette strat\xe9gie correspond par exemple \xe0 LaTeX, et beaucoup de lisp dont emacs-lisp. Common-Lisp impl\xe9mente les deux strat\xe9gies."}),"\n",(0,i.jsxs)(n.h2,{id:"-port\xe9e-et-dur\xe9e-de-vie-en-scheme",children:[(0,i.jsx)("i",{class:"fas fa-code-branch"})," Port\xe9e et dur\xe9e de vie en Scheme"]}),"\n",(0,i.jsx)(n.p,{children:"La port\xe9e d'une liaison est la partie du code source dans laquelle il est possible de l'utiliser."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les liaisons globales ont une port\xe9e \xe9gale \xe0 tout le programme"}),"\n",(0,i.jsxs)(n.li,{children:["Les liaisons locales ont une port\xe9e limit\xe9e \xe0 la forme de d\xe9finition ",(0,i.jsx)(n.code,{children:"let"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"La dur\xe9e de vie d'un objet correspond \xe0 la p\xe9riode de l'ex\xe9cution d'un programme comprise entre la cr\xe9ation de cet objet et sa destruction"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les objets d\xe9finis globalement ont une dur\xe9e de vie \xe9gale \xe0 celle du programme"}),"\n",(0,i.jsx)(n.li,{children:"Les objets d\xe9finis localement ont une dur\xe9e de vie potentiellement \xe9gale \xe0 celle du programme"}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"-paradigme-fonctionnel-et-environnements",children:[(0,i.jsx)("i",{class:"fas fa-code-branch"})," Paradigme fonctionnel et environnements"]}),"\n",(0,i.jsxs)(n.p,{children:["La forme ",(0,i.jsx)(n.code,{children:"let"})," \xe9quivaut \xe0 l'application d'une fonction construite avec la forme ",(0,i.jsx)(n.code,{children:"lambda"}),". Les symboles d\xe9finis correspondent aux param\xe8tres formels de la fonction, et les expressions associ\xe9s aux symboles d\xe9finis correspondent aux arguments de l'application"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(let ((j 0))          ((lambda(j) (* x j)) 0)\n    (* x j)\n)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>t});var i=s(67294);const a={},l=i.createContext(a);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);
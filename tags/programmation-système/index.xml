<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmation Système on Semestre 9</title>
    <link>https://Sdelpeuch.github.io/tags/programmation-syst%C3%A8me/</link>
    <description>Recent content in Programmation Système on Semestre 9</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-Us</language>
    <copyright>Copyright &amp;copy; 2020 [Themefisher](https://themefisher.com) All Rights Reserved</copyright>
    <lastBuildDate>Tue, 01 Dec 2020 13:50:00 +0600</lastBuildDate>
    
	<atom:link href="https://Sdelpeuch.github.io/tags/programmation-syst%C3%A8me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Les threads POSIX</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/14/</link>
      <pubDate>Tue, 01 Dec 2020 13:50:00 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/14/</guid>
      <description>La programmation par thread (activité) est naturelle pour gérer des phénomènes asynchrones. Les entrées utilisateur dans les interfaces graphiques (souris, clavier) sont plus facile à gérer si l&amp;rsquo;on peut séparer l&amp;rsquo;activité principale du logiciel de la gestion des commandes utilisateurs.</description>
    </item>
    
    <item>
      <title>Multiplexer des entrées-sorties</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/13/</link>
      <pubDate>Mon, 30 Nov 2020 11:30:00 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/13/</guid>
      <description>Dans ce chapitre, nous voulons présenter le problème des attentes actives sur plusieurs descripteur. L&amp;rsquo;exemple le plus fréquent est celui d&amp;rsquo;un serveur web, le serveur doit gérer simultanément un très grand nombre de flux d&amp;rsquo;entrée et de flux de sortie et de flux de contrôle.</description>
    </item>
    
    <item>
      <title>Algorithmes Distribués &amp; Interblocages</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/12/</link>
      <pubDate>Mon, 30 Nov 2020 10:30:00 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/12/</guid>
      <description>Ce chapitre introduit les problèmes liés à la gestion de processus concurrents. Le problème à résoudre est le partage de ressources entre différents processus asycrones. Les IPC et et les verrous sont deux types d&amp;rsquo;outils permettant le partage asynchrone de ressources entre processus.</description>
    </item>
    
    <item>
      <title>Les verous de fichiers</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/11/</link>
      <pubDate>Mon, 30 Nov 2020 09:30:00 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/11/</guid>
      <description>Mécanismes de contrôle d&amp;rsquo;accès concurrents à un fichier, les verrous sont d&amp;rsquo;une grande utilité dans les applications de gestion et dans l&amp;rsquo;élaboration de bases de données partagées. Les verrous sont rattachés aux inoeuds.</description>
    </item>
    
    <item>
      <title>Les signaux</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/10/</link>
      <pubDate>Tue, 24 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/10/</guid>
      <description>Les signaux sont un mécanisme asynchrone de communication inter-processus. Intuitivement, ils sont comparables à des sonneries, les différentes sonneries indiquant des évènements différents. Les signaux sont envoyés à un ou plusieurs processus.</description>
    </item>
    
    <item>
      <title>Tubes et tubes nommés</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/9/</link>
      <pubDate>Sun, 22 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/9/</guid>
      <description>Les tubes sont un mécanisme de communication qui permet de réaliser des communications entre processus osus forme d&amp;rsquo;un flot continu d&amp;rsquo;octets. Les tubes sont un des éléments de l&amp;rsquo;agrément d&amp;rsquo;utilisation d&amp;rsquo;UNIX.</description>
    </item>
    
    <item>
      <title>La mémoire virtuelle</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/8/</link>
      <pubDate>Fri, 20 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/8/</guid>
      <description>Les méthodes de gestion mémoire que nous venons de voir ont toutes un défaut majeur qui est de garder l&amp;rsquo;ensemble du processus en mémoire, ce qui donne :
 un coût en swap important impossibilité de créer de très gros processus  Les méthodes de mémoire virtuelle permettent d&amp;rsquo;exécuter un programme qui ne tient pas entièrement en mémoire centrale !</description>
    </item>
    
    <item>
      <title>La mémoire</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/7/</link>
      <pubDate>Wed, 18 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/7/</guid>
      <description>La mémoire d&amp;rsquo;un ordinateur se décompose en plusieurs éléments, dont le prix et le temps d&amp;rsquo;accès sont très variables. Nous développerons dans ce chapitre et le suivant les questions et solutions relatives à la mémoire centrale.</description>
    </item>
    
    <item>
      <title>Les processus</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/6/</link>
      <pubDate>Sun, 15 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/6/</guid>
      <description>Introduction aux processus Un processus est un ensemble d&amp;rsquo;octets (en langage machine) en cours d&amp;rsquo;exécution, en d&amp;rsquo;autres termes, c&amp;rsquo;est l&amp;rsquo;exécution d&amp;rsquo;un programme. Un processus UNIX se décompose en :
 un espace d&amp;rsquo;adressage (visible par l&amp;rsquo;utilisateur / programmeur) Le bloc de contrôle du processus (BCP) lui-même décomposé en :  une entrée dans la table des processus du noyau struc proc définie dans &amp;lt;sys/proc.</description>
    </item>
    
    <item>
      <title>Appels système du Système de Gestion de Fichier</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/5/</link>
      <pubDate>Wed, 11 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/5/</guid>
      <description>Les appels système d&amp;rsquo;entrées-sorties ou entrées-sorties de bas niveau sont rudimentaires mais polymorphes, en effet c&amp;rsquo;est eux qui permettent d&amp;rsquo;écrire des programmes indépendamment des supports physiques sur lesquels se font les entrées/sorties et de pouvoir facilement changer les supports physiques associés a une entrée-sortie.</description>
    </item>
    
    <item>
      <title>La bibliothèque standard</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/4/</link>
      <pubDate>Tue, 10 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/4/</guid>
      <description>Les descripteurs de fichiers Le fichier d&amp;rsquo;inclusion &amp;lt;stdio.h&amp;gt; contient la définition du type FILE. Ce type est une structure contenant les informations nécessaires au système pour la manipulation d&amp;rsquo;un fichier ouvert.</description>
    </item>
    
    <item>
      <title>Le Buffer Cache</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/3/</link>
      <pubDate>Thu, 05 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/3/</guid>
      <description>Introduction au buffer cache Le buffer cache est un ensemble de structures de données et d&amp;rsquo;algorithme qui permettent de minimiser le nombre des accès disque. Ce qui est très important car les disque sont très lents relativement au CPU et un noyau qui se chargerait de toutes les entrées/sorties serait d&amp;rsquo;une grande lenteur et l&amp;rsquo;unité de traitement ne serait effectivement utilisé qu&amp;rsquo;à un faible pourcentage.</description>
    </item>
    
    <item>
      <title>Système de Gestion de Fichiers</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/2/</link>
      <pubDate>Tue, 03 Nov 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/2/</guid>
      <description>Le système de gestion de fichiers est un outil de manipulation des fichiers et de la structure d&amp;rsquo;arborescence des fichiers sur disque et a aussi le rôle sous UNIX de conserver toutes les informations dont la pérennité est importante pour le système (et pour les utilisateurs biensur).</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://Sdelpeuch.github.io/assets/md/prog_sys/1/</link>
      <pubDate>Tue, 20 Oct 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/assets/md/prog_sys/1/</guid>
      <description>Structure générale des systèmes d&amp;rsquo;exploitation Un système d&amp;rsquo;exploitation est un programme qui sert d&amp;rsquo;interface entre un utilisateur et un ordinateur. Un système d&amp;rsquo;exploitation est un ensemble de procédures manuelles et automatique qui permet à un groupe d&amp;rsquo;utilisateur de partager efficacement un ordinateur.</description>
    </item>
    
    <item>
      <title>Programmation Système Page d&#39;accueil</title>
      <link>https://Sdelpeuch.github.io/semestre7/prog_sys/</link>
      <pubDate>Tue, 01 Sep 2020 11:07:10 +0600</pubDate>
      
      <guid>https://Sdelpeuch.github.io/semestre7/prog_sys/</guid>
      <description>Le Support de cours et le Support de TD
Les notes personnelles de TD
   Notes personnelles - cours     Introduction   Système de Gestion de Fichiers   Le Buffer Cache   La bibliothèque standard   Appels système du Système de Gestion de Fichier   Les processus   La mémoire   La mémoire Virtuelle   Tubes et Tubes Nommés   Signaux   Les verrous de fichiers   Algorithmes Distribués &amp;amp; Interblocages   Multiplexer des entrées-sorties   Les Threads POSIX    </description>
    </item>
    
  </channel>
</rss>